
  
  Parametry wiersza poleceń
  Podczas tworzenia gier ważne jest, aby przetestować plik wykonywalny, aby upewnić się, że ostateczna kompilacja jest poprawna i nie zawiera nieprzewidzianych błędów lub różnic. Jednak tworzenie pliku wykonywalnego oznacza, że ponieważ nie masz dostępu do konsoli debugowania ani do okna kompilatora, może być trudno wykryć i usunąć ewentualne problemy. Można to jednak naprawić, używając parametrów wiersza poleceń do ustawiania pewnych właściwości podczas uruchamiania wersji wykonywalnej gry, co z kolei pozwala na tworzenie plików dziennika wyjściowego i testowanie innych specjalnych sytuacji.
  UWAGA Ta funkcja jest dostępna tylko w standardowym module docelowym systemu Windows .
  Aby to zadziałało, musisz najpierw utworzyć plik wykonywalny Windows swojej gry i zainstalować go na komputerze testowym. Po wykonaniu tych czynności należy utworzyć skrót do gry na pulpicie. To właśnie tam będziemy dodawać parametry, które mają być przekazywane do *.exe (aby utworzyć skrót, kliknij prawym przyciskiem myszy  plik wykonywalny gry, a następnie wybierz polecenie Wyślij na > Pulpit (utwórz skrót)) .
  Po utworzeniu skrótu można użyć dowolnego z poniższych parametrów w ścieżce docelowej:
  -noaudio: Powoduje wyłączenie wszystkich dźwięków w grze.
  -inawindow: Wymusza uruchamianie gry w oknie, nawet jeśli jest ona ustawiona na tryb pełnoekranowy.
  -output <filename>: Wysyła dane wyjściowe konsoli do pliku o tej samej nazwie, w tym wszelkie komunikaty debugowania, które znajdują się w bazie kodu.
  -debugoutput <filename>: Wysyła dane wyjściowe konsoli do pliku o podanej nazwie, z pominięciem własnych komunikatów debugowania, ale z uwzględnieniem dodatkowych informacji z runnera w celu zgłaszania błędów.
  -software: Zmusi grę do użycia oprogramowania Vertex Processing zamiast sprzętu do renderowania grafiki w grze. Jest to szczególnie przydatne w przypadku komputerów, które korzystają z wbudowanego chipsetu Intel GFX lub mają problemy z wyświetlaniem grafiki na starszych komputerach.
  -intel: Ta strona switch zawiera poprawkę dla wadliwych sterowników Intela, niezależnie od używanej karty graficznej. To obejście dla tych złych sterowników spowolni działanie gry, dając zauważalny spadek wydajności w grze, więc jeśli nie potrzebujesz tej poprawki, nie używaj jej.
  -vanillaGFX: Użycie tej opcji wyłącza sprawdzanie producenta sterownika i może być bardzo przydatne do testowania gry "w stanie, w jakim się znajduje".
  Warto zauważyć, że adres <filename> w adresach -output i -debugoutput może być taki sam, ponieważ plik jest otwierany i zamykany przy każdym zapisie.
  Powinieneś teraz przejść do miejsca, w którym utworzyłeś skrót do pliku wykonywalnego gry, a następnie kliknąć go prawym przyciskiem myszy i wybrać opcję Właściwości.
  Spowoduje to otwarcie okna podobnego do powyższego. W tym miejscu można dodać do adresu docelowego path swój wiersz poleceń. Wystarczy przewinąć do końca podanego adresu path, dodać spację, a następnie parametr string. Tak więc na przykład, aby utworzyć plik wyjściowy pliku debugowania, należałoby wprowadzić coś takiego:
  D:\Users\Me\GameMaker\CustomLoadBar-Default-1.0.0.0\CustomLoadBar.exe -debugoutput debug.txt
  Spowoduje to utworzenie pliku o nazwie "debug.txt" w tej samej lokalizacji co plik wykonywalny (nie w miejscu, w którym znajduje się skrót, lecz tam, gdzie zainstalowana jest gra), zawierającego informacje o debugowaniu i kompilacji Twojej gotowej gry. Kliknij przycisk "OK", a następnie użyj skrótu do uruchomienia gry, aby wykorzystać te parametry i pomoc z debugging.
  Więcej informacji na temat debugowania gry można znaleźć w rozdziale instrukcji zatytułowanym Debugowanie.
  Testy A/B z wykorzystaniem wiersza poleceń
  
    Program uruchamiający YoYo korzysta również ze specjalnego parametru wiersza poleceń:
    -game <filename>: ładuje podany plik gry
    Dlaczego warto tego używać? Cóż, normalnie byś tego nie zrobił, ale jeśli chcesz mieć więcej niż jedną wersję gry uruchomioną w tym samym czasie, możesz to zrobić za pomocą tej metody, co znacznie ułatwi Ci testy porównawcze A/B. Dzięki tej metodzie możesz przeprowadzać testy focusowe z kimś
      lub, jako projektant, uzyskać lepsze wyczucie sytuacji, przeprowadzając testy obok siebie.
    Aby to skonfigurować, trzeba wcześniej wiedzieć kilka rzeczy. Na początek potrzebny będzie adres path do samego programu Runner. Można go znaleźć w folderze Program Data systemu operacyjnego Windows (może on być domyślnie ukryty, więc aby go zobaczyć, należy
      aby go zobaczyć, należy zmienić właściwości przeglądania), w typowym formacie, jak poniżej:
    C:\ProgramData\GameMakerStudio2\Cache\runtimes\<runtime_version>\windows\Runner.exe
    Należy pamiętać, że folder runtime_version będzie zależał od aktualnie zainstalowanego runtimes. Potrzebne będą również pliki path do <yourgame>.win, ponieważ to właśnie na nie będziemy kierować runnera.
      Najprostszym sposobem znalezienia tego pliku jest przejście do folderu Temp (zazwyczaj znajdującego się pod adresem %localappdata%\Temp\GameMakerStudio\<game_name>\) i wyszukanie *.win, ponieważ w ten sposób
      wyświetli wszystkie dostępne pliki i można po prostu wybrać ten, z którego chcemy pobrać pełny path.
    Moglibyśmy utworzyć skrót do runnera, tak jak to zrobiliśmy dla pliku wykonywalnego, a następnie zmieniać parametry w razie potrzeby, ale to oznacza konieczność otwierania i edytowania go między testami, co mija się z celem używania tej funkcjonalności do przeprowadzania
      testowania. Zamiast tego utworzymy kilka małych plików "wsadowych", które będą to obsługiwać.
    W tym celu najpierw utwórz nowy dokument tekstowy na pulpicie i otwórz go w Notatniku (lub innym edytorze tekstu). Dodaj następujące elementy:
    START C:\ProgramData\GameMakerStudio2\Cache\runtimes\<runtime_version>\windows\Runner.exe -game <LOCAL TEMP PATH>\<GAMENAME>.win
    Musisz ustawić plik tymczasowy path jako wskazujący na plik *.win, a następnie zapisać go jako "GM_Test_1.bat" na pulpicie (pamiętaj, że Notatnik automatycznie zapisze plik jako *.txt, chyba że wybierzesz opcję "wszystkie pliki" w oknie dialogowym zapisu). Przykładowe polecenie końcowe może wyglądać następująco:
    START C:\ProgramData\GameMakerStudio2\Cache\runtimes\runtime-9.9.1.199\windows\Runner.exe -game D:\Users\Mark\AppData\Local\Temp\GameMakerStudio2\AlphaDog_Reboot\AlphaDog_Reboot.win
    Teraz utwórz kolejny plik tekstowy i dodaj ten sam wiersz, tylko tym razem wskaż w nim adres path dla drugiej wersji gry, z którą chcesz przeprowadzić testy side-by-side, i zapisz go jako "GM_Test_2.bat".
      Możesz dwukrotnie kliknąć , aby wyświetlić różne wersje gry, a
      Dzięki temu, że są to pliki wsadowe, możesz je łatwo otworzyć ponownie, aby je edytować i zmienić testowaną grę.
    
    
  
   
   
  
    
      
        Powrót: Biegacz i kompilator
        Następny: Redakcja Asset 
      
    
    © Copyright YoYo Games Ltd. 2022 Wszystkie prawa zastrzeżone.
  
  
  

