
  
  Wydarzenia dotyczące obiektów
  Czym więc są wydarzenia object? Zasadniczo są to dyskretne momenty w grze loop, w których rzeczy dzieją się zgodnie z tym, co dla nich zaprogramowałeś. GameMaker Studio 2 działa w cyklach takich zdarzeń - od momentu rozpoczęcia room do momentu zakończenia gry loop działa gra, w której co krok uruchamiana lub sprawdzana jest seria zdarzeń, a ty możesz umieścić w swojej objects kod lub akcje DnD™, które reagują na te zdarzenia (krok jest momentem w czasie gry, regulowanym przez ustawienie prędkości room, i może być również nazywany ramką).
  Przyjrzyjmy się typowej konfiguracji strony object z uwzględnieniem zdarzeń i kodu:
  Jak widać na naszym przykładzie object, na liście znajduje się wiele zdarzeń, na które powinna ona reagować, ale początkowo, gdy tworzysz stronę object, lista ta jest pusta i musisz zdecydować, które zdarzenia są potrzebne i co instancje tej strony object powinny zrobić, gdy te zdarzenia zostaną wywołane. Aby dodać zdarzenia do object, należy nacisnąć przycisk Dodaj zdarzenie znajdujący się na dole listy zdarzeń, co spowoduje wyświetlenie następującego okna:
  Jest to lista wszystkich podstawowych zdarzeń i kategorii zdarzeń, na które może reagować object, a w ramach każdej kategorii znajdują się zdarzenia podrzędne, które umożliwiają dalsze doprecyzowanie zachowań. Na przykład, jeśli klikniesz kategorię zdarzeńNaciśnięcie klawisza , pojawi się kolejne okno ze zdarzeniami, które pozwalają wybrać, na jaki klawisz ma reagować object. Po wybraniu zdarzenia zostanie do niego dołączone okno kodu (lub okno DnD™ workspace ) i otworzy się ono po prawej stronie. Możesz teraz edytować kod, aby nadać swojej witrynie object określone zachowanie lub reakcję na dane zdarzenie.
  Można kliknąć prawym przyciskiem myszy  na dowolnym zdarzeniu, które zostało dodane do strony object, aby uzyskać następujące opcje menu:
  Są to następujące opcje:
  
    Dodaj wydarzenie - dodawanie nowego wydarzenia z listy wydarzeń.
    Wytnij/  Kopiuj /  Wklej zdarzenia - Wytnij, skopiuj lub wklej wybrane zdarzenie. Można też użyć standardowych skrótów klawiaturowych:  /  + X,  /  + C, oraz  /  + V.
    Duplikuj zdarzenie - powiela wybrane zdarzenie. Spowoduje to pobranie zawartości wybranego zdarzenia i powielenie jej w innym, określonym przez użytkownika zdarzeniu.
    Zmień wydarzenie - zmiana wydarzenia. Zostanie wyświetlony monit o wybranie innej kategorii zdarzenia, a po jej wybraniu zawartość bieżącego zdarzenia zostanie zmieniona na nowe zdarzenie (przy jednoczesnym usunięciu pierwotnego zdarzenia).
    Convert To Drag and Drop / Code (Konwertuj na / Kod ) - zdarzenia na stronie Object będą tworzone przy użyciu metody wybranej podczas tworzenia projektu, czyli przy użyciu kodu lub akcji Drag and Drop™. Dzięki tej opcji można konwertować z jednej na drugą, niezależnie od typu projektu.
    Usuń zdarzenie - usuwa zdarzenie (lub zdarzenia).
  
  Podczas usuwania zdarzeń można użyć  + , aby zaznaczyć wiele zdarzeń, a następnie usunąć je wszystkie razem. Każda utworzona strona object ma własną listę zdarzeń, które są do niej dodawane z Edytora obiektów. Zdarzenia te dzielą się na dwie kategorie:
  
    te, które uruchamiają każdy krok gry
    te, które są "wyzwalane" przez zdarzenie w grze, takie jak osiągnięcie przez instancję krawędzi room lub naciśnięcie klawiatury albo myszy.
  
  Pełna lista wydarzeń znajduje się poniżej:
  Utwórz stronę
  
    To zdarzenie ma miejsce, gdy po raz pierwszy tworzona jest instancja object, i jest pierwszą rzeczą, która dzieje się w instancji umieszczonej w room za pośrednictwem edytora Room, gdy zostanie wprowadzona room. Oznacza to, że to zdarzenie jest idealnym miejscem do inicjalizacji zmiennych, uruchamiania linii czasowych, ustawiania ścieżek itp. oraz wykonywania wszelkich innych czynności, które zazwyczaj muszą być wykonane tylko raz lub tylko podczas pierwszego tworzenia instancji w room. Jeśli na stronie object dodano zmienne obiektu lub zmienne instancji w Edytorze Object lub Edytorze Room, zmienne te zostaną najpierw zainicjowane, a następnie zostanie uruchomione zdarzenie Create Event.
    Pamiętaj, że wszystko, co zostało ustawione w zdarzeniu tworzenia, możesz modyfikować w kodzie tworzenia instancji w edytorze Room, ponieważ jest on uruchamiany bezpośrednio po zdarzeniu tworzenia instancji i może być użyty do tworzenia zmiennych instancji lub zastępowania zmiennych dodanych jako zmienne Object lub w samym zdarzeniu tworzenia.
     
     
  
  Zniszcz
  
    To zdarzenie jest zdarzeniem, które zostanie wykonane, gdy instancja zostanie zniszczona. Często jest ono pomijane przy dodawaniu zachowań do objects, ale może być bardzo użyteczne, na przykład przy tworzeniu efektów eksplozji lub cząsteczek po zabiciu wroga, lub przy ponownym uruchomieniu nowej instancji w innej części , a nawet przy dodawaniu punktów do wyniku.
      nową instancję object w innej części room, a nawet do dodawania punktów do wyniku.
     
  
  Sprzątanie
  
    To zdarzenie zostanie wywołane po każdym zdarzeniu, które spowoduje usunięcie instancji object z witryny room. Zostanie więc wywołane, jeśli:
    
      instancja zostanie zniszczona
       room kończy się
      gra się kończy
    
    Służy do "czyszczenia" wszelkich zasobów dynamicznych w grze (takich jak powierzchnie, struktury danych itp.) lub do wykonywania zadań, które mają być wykonane jednorazowo , gdy instancja zostanie w jakikolwiek sposób usunięta z gry.
    Zauważ, że to zdarzenie zostanie wywołane natychmiast po zdarzeniu, które je wywołało, ale instancja nie zostanie faktycznie usunięta z gry aż do zakończenia bieżącego zdarzenia. Na przykład, jeśli wywołasz instance_destroy() w zdarzeniu Step, zostanie wywołane zdarzenie Destroy, następnie zdarzenie Clean Up, a po nim zakończy się reszta zdarzenia Step Event. Oznacza to, że każdy kod, który zostanie wykonany po wywołaniu instance_destroy(), będzie nadal wykonywany i może być przyczyną błędów, jeśli wyczyszczono strukturę danych lub inny zasób wymagany przez ten kod, dlatego należy zachować ostrożność podczas korzystania z tego zdarzenia.
    
     
  
  Alarm
  
    Kategoria alarmów jest podzielona na 12 zdarzeń, po jednym dla każdego z możliwych alarmów, które można ustawić w danej instancji. Tak więc po kliknięciu kategorii Dodaj alarm pojawi się to okno:
    W tym miejscu należy wybrać alarm, który ma zostać utworzony, a po wykonaniu tej czynności zostanie on dodany do okna zdarzeń
      dzięki czemu można do niego dodawać kod w normalny sposób. Ale co to jest alarm? Otóż jest to specjalne zdarzenie, które nie robi nic, chyba że alarm został wcześniej ustawiony, a następnie czeka, aż alarm odliczy do 0, zanim wykona czynności
      lub kodu, który został do niego dodany.
    Po osiągnięciu przez alarm wartości 0 i uruchomieniu kodu będzie on odliczał do -1, gdzie pozostanie aż do ponownego ustawienia (co oznacza, że można sprawdzić, czy wartość alarmu jest większa niż -1, co pozwoli określić, czy alarm działa, czy nie). Tak więc, powiedzmy
      że w zdarzeniu create object ustawisz wartość alarm[0] na 30, oznacza to, że GameMaker Studio 2 będzie odliczać 30 kroków gry, zanim wykona akcje lub kod umieszczony w zdarzeniu alarm[0]. Zauważ, że ustawienie alarmu na 0 nie spowoduje uruchomienia kodu alarmu, ponieważ zdarzenie zostanie wywołane, ale alarm zostanie natychmiast ustawiony na -1, więc kod zostanie pominięty. Jeśli alarm ma być uruchamiany w następnym kroku, należy ustawić go na 1.
    Może to być bardzo przydatne, ponieważ pozwala na uruchamianie elementów w ściśle określonych momentach, a nawet ich powtarzanie, ponieważ nic nie stoi na przeszkodzie, aby ustawić alarm w osobnym zdarzeniu. Wyobraź sobie, że masz potwora i chcesz, aby obracał się w prawo co
      co trzy sekundy... ustawiasz alarm w zdarzeniu tworzenia na prędkość room * 3 (jeśli prędkość room wynosi 30, to jest to 30 kroków na sekundę, więc pomnóż to przez 3 i otrzymasz 3 sekundy!
      aby ustawić jego kierunek, a także akcję (lub kod), aby ustawić alarm na prędkość room * 3 ponownie. W ten sposób można skonfigurować prostą grę loops, w której pewne rzeczy dzieją się tylko w określonych odstępach czasu.
    Warto zauważyć, że alarm, w którym nie ma żadnych akcji ani kodu, nie będzie odliczał czasu. Jednak nawet w przypadku samego komentarza, bez kodu lub akcji, alarm będzie nadal odliczał czas i można go ustawiać i sprawdzać w normalny sposób.
     
  
  Krok
  
    GameMaker Studio 2 dzieli czas na kroki , a prędkość room określa, ile tych kroków ma być na sekundę (krok można też nazwać klatką). Pojedynczy krok to w zasadzie strona loop, która działa
      więc, jak można sobie wyobrazić, zdarzenie Step jest zdarzeniem, które jest sprawdzane w każdym kroku gry, gdy istnieje jej instancja.
    Etap ten składa się z trzech etapów, które opisano poniżej:
    Do większości zadań wystarczy standardowe zdarzenie kroku, ale czasami chcemy mieć większą kontrolę nad tym, jaki kod ma być uruchamiany i w jakim czasie.
      i w jakim czasie. W tym celu udostępniono zdarzenia Begin i End step. Wszystkie trzy są sprawdzane w każdym kroku, ale ich kolejność nie zmieni się nawet wtedy, gdy przyszłe aktualizacje silnika GameMaker Studio 2 zmienią inne zdarzenia.
      Oznacza to, że jest to jedyna niezawodna metoda upewnienia się, że coś zawsze dzieje się przed czymś innym.
    Do czego można wykorzystać zdarzenie step? Cóż, można je wykorzystać do działań lub kodu, który musi być wykonywany w sposób ciągły. Na przykład, jeśli jedna strona object ma podążać za drugą, można tutaj dostosować kierunek ruchu do strony object, za którą podążamy
      aby zachować płynność ruchu za nim. Należy jednak uważać z tym zdarzeniem i nie umieszczać wielu skomplikowanych akcji w zdarzeniu step w objects, zwłaszcza jeśli planujesz mieć wiele instancji object w swojej grze room, ponieważ może to
      spowolnić grę. Wiele rzeczy można umieszczać w alarmach lub ustawiać ich wyzwalanie za pomocą innych zdarzeń, zamiast wykonywać je przez cały czas.
     
     
  
  Kolizja
  
    Oczywiście podczas tworzenia gry bardzo ważne jest, aby wiedzieć, kiedy dwie (lub więcej) instancje obiektu object zderzą się ze sobą, dlatego mamy zdarzenie kolizji. Jest to zdarzenie, które umieszcza się w witrynie object, a następnie określa się
      z którym innym object należy sprawdzić, czy nie doszło do kolizji.
    Jeśli fizyka nie jest włączona, kolizje te będą obliczane na podstawie maski obu stron objects (maska jest określana we właściwościach sprite lub może być przypisana niezależnie we właściwościach object ) oraz na podstawie tego, czy się pokrywają
      czy też nie. Zauważ, że jeśli jedna lub druga instancja w kolizji nie ma przypisanej maski (lub maska sprite jest ustawiona na zero), to nawet jeśli coś rysuje, nie zostaną wykryte żadne kolizje.
    Jeśli masz włączoną fizykę , kolizja będzie oparta na typie kształtu kol izji(Fixture), który zdefiniowałeś dla object w jego właściwościach fizyki, podobnie jak jego reakcja na kolizję. To
      Oznacza to, że do obsługi kolizji może nie być potrzebny żaden kod, ale zdarzenie będzie musiało zawierać przynajmniej komentarz , aby kolizje zostały wykryte.
    Na koniec należy zauważyć, że wszystkie kolizje będą obliczane raz na krok gry przed wywołaniem zdarzenia kolizji, tak więc gdy zdarzenie kolizji zostanie uruchomione, wszystkie kolizje zostaną już obliczone i wstępnie przypisane. Oznacza to, że
      jeśli utworzysz instancję w tym zdarzeniu, a następnie spróbujesz sprawdzić, czy doszło do kolizji, kolizja nie zostanie wykryta ani rozwiązana aż do następnej iteracji gry loop.
     
     
  
  Klawiatura,  Prasa do klawiatury,   Odblokowanie klawiatury
  
    Umożliwienie graczowi sterowania różnymi aspektami gry jest bardzo ważne. W tym celu na stronie GameMaker Studio 2 udostępniono bardzo obszerną listę zdarzeń klawiaturowych, które można wykorzystać w każdej z trzech głównych kategorii klawiatur. W przypadku
      w kategorii Klawiatura ogólna, jest ono wyzwalane w sposób ciągły co krok, tak długo, jak długo wciśnięty jest wybrany klawisz, podczas gdy zdarzenia w kategorii Naciśnięcie i zwolnienie są wyzwalane tylko raz, gdy klawisz jest początkowo wciśnięty lub zwolniony.
    Należy zauważyć, że zdarzenia klawiatury są wywoływane we wszystkich aktywnych instancjach w witrynie room za każdym razem, gdy zostanie użyty klawisz, ale zareagują tylko te, które mają zdefiniowane zdarzenie dla danego klawisza.
     object Można utworzyć wiele zdarzeń klawiaturowych w dowolnej witrynie object, a instancje tej witryny zareagują na nie wszystkie podczas gry.
    Po dodaniu dowolnego zdarzenia klawiaturowego do witryny object zostanie wyświetlone menu zdarzeń podrzędnych klawiatury, w którym można określić klawisz, który ma być sprawdzany:
    Większość z nich jest dość oczywista, ale omówmy pokrótce poszczególne sekcje - na samej górze znajdują się klawisze strzałek,
      następnie najczęściej używane klawisze modyfikatorów, potem reszta klawiatury (podzielona na dalsze podsekcje, aby można było uzyskać dokładną informację o wymaganym klawiszu, np.  lub ), a na końcu dwa bardzo specjalne podzdarzenia, Brak klawisza i Dowolny klawisz. Jak sugerują ich nazwy, są to zdarzenia podrzędne
      które sprawdzają, czy nie został naciśnięty żaden klawisz lub czy został naciśnięty dowolny klawisz. Należy pamiętać, że klawisze klawiatury numerycznej wywołują odpowiednie zdarzenia tylko wtedy, gdy włączona jest funkcja Number Lock .
    Zdarzenia Naciśnięcie i Zwolnienie klawiatury są niemal dokładnie takie same jak zwykłe zdarzenia klawiatury, z tą różnicą, że zamiast wyzwalać je w sposób ciągły, są one wyzwalane tylko raz. Gdy klawiatura po raz pierwszy zarejestruje
      że klawisz został naciśnięty, wygeneruje zdarzenie Naciśnięcie klawisza (oraz zwykłe zdarzenie Klawiatura), a za pierwszym razem, gdy klawisz nie będzie już wykrywany jako naciśnięty, wygeneruje pojedyncze zdarzenie Zwolnienie klawisza.
     
     
  
  Mysz
  
    Kategoria Mysz jest podzielona na serię zdarzeń, które można wybrać, aby uzyskać bardziej precyzyjną kontrolę nad tym, co dzieje się w grze. Tutaj można zobaczyć, jakie dokładnie są to zdarzenia:
    Wszystkie zdarzenia związane z lewym , prawym  i środkowym  przyciskiem ( normalne, wciśnięte lub zwolnione)
      działają na maskę instancji, której dotyczy zdarzenie. Oznacza to, że GameMaker Studio 2 sprawdzi położenie myszy na stronie room, gdy zostaną użyte te przyciski, względem masek kolizji instancji, w których wystąpiło zdarzenie myszy. Jeśli
      dojdzie do "kolizji" z polem ograniczającym instancji, zostanie wywołane zdarzenie, więc upewnij się, że każda instancja z tymi zdarzeniami ma stronę sprite z poprawną maską kolizji lub że strona ma poprawną maskę kolizji.
      lub że na stronie object we właściwościach sprite jest wybrana maska object. Jak sugerują ich nazwy, zdarzenia te będą wywoływane albo jednorazowo, gdy wybrany przycisk myszy zostanie po raz pierwszy naciśnięty lub zwolniony, albo w sposób ciągły w każdym kroku, gdy przycisk jest
      utrzymywane.
    
    Zdarzenia wejścia i wyjścia myszy są również podobne do zdarzeń przycisków w tym sensie, że ich działanie również zależy od maski instancji, ale tym razem są one wyzwalane, gdy mysz po raz pierwszy "wejdzie" (dotknie) instancji lub gdy "opuści" (przestanie dotykać) instancję.
      (przestaje dotykać) instancję. Zdarzenia te nie są jednak ciągłe i są wyzwalane tylko raz za każdym razem, gdy mysz wejdzie lub opuści instancję object - są więc idealną metodą do tworzenia np. przycisków, które mają się zmieniać, gdy mysz
      a następnie wracają do normalnego stanu po usunięciu myszy.
    Na koniec mamy jeszcze jedną sekcję zdarzeń myszy, która nosi nazwę Mysz globalna. W tym podmenu znajduje się wybór zdarzeń, które służą do rejestrowania zdarzeń myszy w instancjach, nawet jeśli mysz nie znajduje się nad nimi lub
      w ich pobliżu. Są to zdarzenia, które są generowane dla wszystkich instancji i jeśli dla danego zdarzenia zdefiniowane są akcje lub kod, to zostaną one wykonane, niezależnie od położenia myszy w grze room.
    Należy pamiętać, że w urządzeniach przenośnych lub z ekranem dotykowym lewy przycisk myszy  może być również używany do sprawdzania zakładki palca na ekranie dotykowym, a prawy przycisk myszy  jest wyzwalany przez podwójne stuknięcie w ekran (to zachowanie można zmienić za pomocą kodu).
     
     
  
  Gesty
  
    Jest to zdarzenie, które zostanie wywołane przez użytkownika dotykającego ekranu (na urządzeniach mobilnych) lub klikającego i poruszającego myszą (na wszystkich innych platformach). Zdarzenia te są podobne do zdarzeń myszy, ponieważ istnieją wersje zwykłe oraz wersje globalne.
      Zwykłe wersje tych zdarzeń są wyzwalane tylko wtedy, gdy dotknięcie nastąpi na instancji, która ma stronę sprite (lub maskę), a dotknięcie nastąpi w jej polu ograniczającym. Wersje globalne
      będą wyzwalane przez dotknięcie przez użytkownika dowolnego miejsca na ekranie.
    Zdarzenia związane z gestami pozwalają wykryć następujące elementy:
    
       stuknięcia -  gdy użytkownik klika/dotyka i szybko zwalnia przycisk
       przeciąganie -  gdy użytkownik dotknie/kliknie i przytrzyma, a następnie przesunie palec/kursor
       kliknięcia -  gdy użytkownik przesuwa i zwalnia dotyk/kliknięcie jednym ruchem
       uszczypnięcia -  gdy użytkownik trzyma dwa palce na ekranie, a następnie przesuwa je razem/oddziela od siebie
       obraca -  gdy użytkownik trzyma dwa palce na ekranie, a następnie obraca je wokół punktu
    
    Różne zdarzenia będą zawsze zawierały mapę DS o nazwie "event_data", która
      zawiera szereg par klucz/wartość z danymi dotyczącymi pozycji i ruchu dotknięcia/kliknięcia. Szczegółowe informacje o wszystkich dostępnych zdarzeniach podrzędnych i sposobie ich działania można znaleźć w następującej sekcji:
    
      Wydarzenie "Gest
    
     
     
  
  Inne
  
    Istnieje wiele specjalnych zdarzeń, które można wykorzystać podczas tworzenia gier w witrynie GameMaker Studio 2. Są one w większości zgrupowane pod nazwą Inne zdarzenie i można je wybrać z menu podręcznego, które pojawia się po wybraniu tej opcji. Poniżej znajduje się
      obraz wszystkich tych innych zdarzeń:
    Więcej informacji na temat każdego z wydarzeń przedstawionych na powyższej ilustracji można znaleźć w następującej części:
    
      Pozostałe wydarzenia
    
     
  
  Rysuj
  
    Ta kategoria zdarzeń decyduje o tym, co widać na ekranie po uruchomieniu gry, i jest podzielona na różne zdarzenia:
    Jak widać, kategoria zdarzeń rysowania zawiera wiele różnych typów zdarzeń. Zdarzenia Draw Begin, Draw i Draw End są "standardowymi" zdarzeniami rysowania, z których prawdopodobnie będziesz korzystać najczęściej. Domyślnie główne zdarzenie Draw jest wywoływane zawsze dla każdej instancji, niezależnie od tego, czy ma ona adres sprite, czy nie, choć jeśli flag instancja jest niewidoczna, zdarzenie
      nie zostanie wywołane (należy o tym pamiętać, jeśli w zdarzeniu draw niewidocznej instancji object znajduje się jakaś logika gry, ponieważ nie zostanie ona uruchomiona). Zdarzenie main draw jest także miejscem, w którym GameMaker Studio 2 domyślnie rysuje instancję sprite, jeśli w zdarzeniu nie ma żadnego kodu ani
      akcji w tym zdarzeniu (tzn. nie dodano go do listy zdarzeń dla object). Domyślne rysowanie wykorzystuje instancję sprite powiązaną z instancją i będzie ją rysować z wszelkimi przekształceniami ustawionymi w kodzie lub zastosowanymi akcjami.
    Standardowe zdarzenia rysowania rysują przed zdarzeniami Rysuj GUI oraz pomiędzy zdarzeniami Pre Draw i Post Draw , co oznacza, że wszystko, co zostanie narysowane w tym zdarzeniu, zostanie narysowane pod tym
      w zdarzeniu Rysuj interfejs graficzny , niezależnie od warstwy (tzn. wszystko, co zostało narysowane w zdarzeniu Rysuj interfejs graficzny, będzie zawsze rysowane nad wszystkim, co zostało narysowane w zwykłym zdarzeniu rysowania, niezależnie od kolejności warstw).
    Powyżej przedstawiono ogólny zarys działania zdarzeń losowania, ale szczegółowe informacje na temat wszystkich dostępnych zdarzeń podrzędnych można znaleźć w następującej sekcji:
    
      Wydarzenie losowania
    
     
     
     
  
  Asynchroniczne
  
    Ta kategoria zdarzeń jest szczególna, ponieważ zdarzenia w niej zawarte nie są domyślnie wyzwalane przez stronę GameMaker Studio 2, ale raczej przez zakończenie jakiejś innej akcji, na przykład załadowanie pliku lub odpowiedź z witryny server. Kategoria ta jest podzielona na
      następujące zdarzenia:
    
    Załóżmy, że chcesz dodać plik graficzny do strony GameMaker Studio 2. Cóż, zakodowałbyś to w innym zdarzeniu (być może w zdarzeniu Create) strony object, a następnie kazałbyś stronie object narysować pasek ładowania podczas oczekiwania (na przykład), wywołując odpowiednie zdarzenie asynchroniczne
      aż do wywołania zwrotnego, które poinformuje GameMaker Studio 2, że plik został załadowany. Dane zwrócone w tym zdarzeniu można następnie wykorzystać do innych czynności, np. zmiany adresu room lub zakupu przedmiotu.
    Powyżej przedstawiono ogólny zarys działania zdarzenia asynchronicznego, natomiast szczegółowe informacje na temat wszystkich dostępnych zdarzeń podrzędnych można znaleźć w następnej sekcji:
    
      Lista zdarzeń asynchronicznych
    
     
  
   
  Należy również pamiętać, że zdarzenia można nazywać, a przynajmniej nadawać im krótki tekst opisowy, który będzie wyświetlany obok nich w Edytorze zdarzeń. Aby to zrobić, wystarczy w pierwszej linii edytora kodu zdarzenia dodać następujący tekst:
  /// @description Your text here
  Na przykład w zdarzeniu alarmowym można zapisać coś takiego
  /// @description This is the AI Fight alarm
  Teraz w Edytorze zdarzeń zobaczysz to:
  
  W przypadku użytkowników DnD™ dodanie komentarza wymaga użycia akcji Wykonaj kod, którą należy umieścić na samej górze listy akcji dla danego zdarzenia, przed wszystkimi innymi. Po dodaniu tej akcji należy nadać jej tę samą linijkę kodu, która została pokazana powyżej, aby nazwać zdarzenie, np:
  Dodatkowe informacje na temat niektórych z powyższych imprez oraz ogólny porządek przebiegu imprez można znaleźć w poniższych sekcjach:
  
    Kolejność zdarzeń
    Pozostałe wydarzenia
    Wydarzenia związane z losowaniem
    Zdarzenia asynchroniczne
    Wydarzenia związane z gestami
  
   
   
   
  
    
      
        Powrót: Redaktor Object 
        Następny: Obiekty macierzyste
      
    
    © Copyright YoYo Games Ltd. 2022 Wszystkie prawa zastrzeżone.
  
  
  

