
  
  Odtwarzanie dźwięku
  To zdarzenie może być wywołane tylko przez funkcje odtwarzania kolejki audio i zwróci mapę DS Map przechowywaną w zmiennej  async_load,
    zawierającą różne pary klucz/wartość odnoszące się do pliku audio queue, który wywołał zdarzenie. Zdarzenie jest wyzwalane przez wywołanie zwrotne po wybraniu pliku audio queue do odtworzenia i zakończeniu odtwarzania pliku audio .
    buffer w tym pliku audio queue zakończy się odtwarzanie.
  Na mapie DS dostępne będą następujące klawisze:
  
    "queue_id" - indeks strony queue dla strony queue, która zakończyła odtwarzanie, zwrócony przez funkcję audio_create_play_queue().
    "buffer_id" - identyfikator buffer dla bufora, z którego nie jest już odtwarzany.
    "queue_shutdown" - wartość ta jest ustawiona na 0 podczas normalnego odtwarzania i na 1, gdy zdarzenie jest odbierane, ponieważ audio_free_play_queue() ma
      zostało wywołane. Gdy wartość ta jest ustawiona na 1, oznacza to, że nie chcesz queue żadnych dalszych danych.
  
  Ponieważ stronę audio queue można utworzyć z wielu stron buffers, zdarzenie to może być wyzwalane wielokrotnie dla jednej strony queue po osiągnięciu końca każdej sekcji buforowanego dźwięku, stąd klucz "buffer_id".
  UWAGA: Zmienna async_load jest ważna tylko w zdarzeniach asynchronicznych, ponieważ mapa DS, na którą wskazuje, jest tworzona na początku zdarzenia, a następnie ponownie usuwana na końcu, przy czym ta
    Jednak wszystkie kolejne struktury danych utworzone na podstawie zdarzenia muszą zostać wyczyszczone za pomocą odpowiednich funkcji.
  W podanym poniżej przykładzie użycia utworzymy stronę audio queue z 10 buforowanymi dźwiękami, a następnie odtworzymy kolejkę:
  audio_queue = audio_create_play_queue(buffer_s16, 11052, audio_mono); for (var i = 0; i < 10; i++;)    {    audio_queue_sound(audio_queue, audio_buffer[i], 0, buffer_get_size(audio_buffer[i]));    } audio_play_sound(audio_queue,
    0, true);
  W każdym kroku gry, w którym wykryto nagrywanie, zostanie uruchomione zdarzenie asynchronicznego nagrywania dźwięku, w którym można zająć się nagranym sygnałem wejściowym w następujący sposób:
  var queue = async_load[? "queue_id"]; var num = 0; if queue = audio_queue    {    for (var i = 0; i < 10; i++;)       {       if async_load[? "buffer_id"] == audio_buffer[i]          {  buffer_seek(audio_buffer[i],
    buffer_seek_start, 0);          num = i;          }       }    if num == 9       {       audio_stop_sound(audio_queue);       audio_free_play_queue(audio_queue);       }  }
  
  W tym przypadku sprawdzamy identyfikator queue i jeśli jest to ten, którego szukamy, sprawdzamy identyfikator buffer, aby sprawdzić, która strona buffer zakończyła odtwarzanie. Następnie ustawiamy zmienną lokalną na tę wartość indeksu, aby móc ją później sprawdzić, i ustawiamy buffer z powrotem na początek odtwarzania tego
    dźwięku. Gdy zmienna lokalna osiągnie wartość 9, co oznacza, że odtwarzanie queue się zakończyło, zatrzymujemy odtwarzanie dźwięku i zwalniamy queue.
   
   
   
   
  
    
      
        Powrót: Zdarzenia asynchroniczne
        Następny: Nagrywanie dźwięku
      
    
    © Copyright YoYo Games Ltd. 2021 Wszystkie prawa zastrzeżone.
  
  
  

