
  
  Redaktor Shader 
  Shadery to bardzo potężne narzędzie, które może być używane do manipulowania grafiką renderowaną przez grę na ekranie, umożliwiając uzyskanie niezwykle szybkich efektów, począwszy od dodania subtelnego odcienia koloru do strony sprite, aż po efekty zniekształcenia całego ekranu. Ale co to jest shader?
  Strona shader to w zasadzie dwuczęściowy program, który jest uruchamiany bezpośrednio na karcie graficznej, dzięki czemu jest bardzo szybki, ponieważ procesor graficzny wykonuje całą pracę, i zwalnia cykle procesora centralnego na potrzeby kodu gry. Pełna strona shader składa się z programu vertex shader oraz fragmentu shader (znanego także jako pixel shader). Oba te małe programy współpracują ze sobą, aby manipulować tym, co karta graficzna wyświetla na ekranie. Umożliwia to manipulowanie w czasie rzeczywistym położeniem, kolorem i wartościami alfa, które są faktycznie renderowane do bufora wyświetlacza.
  Vertex Shader
  
     Vertex Shader to programowalny etap shader w potoku renderowania, który zajmuje się przetwarzaniem poszczególnych wierzchołków (punktów trójkątów używanych do renderowania dowolnego obrazu), a podczas renderowania geometrii - takiej jak sprite lub powierzchnia
      - GameMaker Studio 2 tworzy strumień wierzchołków - zwany buforem wierzchołków -  który definiuje geometrię tych trójkątów. Na przykład na stronie sprite geometria dwóch trójkątów (normalnie nazywanych wielokątami) jest renderowana
      razem w celu utworzenia "quada". Strumień vertex z Vertex Buffer jest podawany jako wejście do Vertex Shader, który może przetwarzać dane wierzchołków w programowalny sposób. Wyjście Vertex Shader jest wykorzystywane przez procesor graficzny do składania trójkątów,
      które są następnie odpowiednio przycinane i przycinane do portu widoku i kamery, a następnie przesyłane do bloku rasteryzacji układu GPU, który generuje nowy strumień wyjściowy, składający się z czegoś, co nazywa się Fragmentami. Są to niewielkie struktury danych
      danych, z których każda odnosi się do pojedynczego piksela wyświetlanego na ekranie.
  
  Shader fragmentów
  
    Fragment Shader to programowalny etap shader w potoku renderowania, który zajmuje się "fragmentami" - interpolowanymi pikselami używanymi do texture danego wielokąta - i jest odpowiedzialny za wyprowadzenie ostatecznego koloru piksela każdego
      renderowanego trójkąta. Zasadniczo działa to tak: Fragment Shader otrzymuje na wejściu wszystkie te fragmenty (poszczególne piksele renderowanego trójkąta), które zostały przekazane wzdłuż rurociągu przez Vertex Shader. Może on następnie
      przetworzyć te fragmenty, aby zmienić kolor i alfa końcowego piksela docelowego, który zostanie narysowany na ekranie.
  
   
  Pełne omówienie tego, jak naprawdę działa strona shaders i jakie miejsce zajmuje w potoku graficznym, wykracza poza zakres tego opracowania, ale krótki przewodnik można znaleźć tutaj:
  
    Przewodnik po użyciu shaderów
  
   
  Pomoc językowa
  GameMaker Studio 2 obsługuje następujące języki shader:
  
    
      
        Język shaderów
        Platforma docelowa
      
      
        GLSL ES 1.0
        Wszystkie platformy docelowe
      
      
        GLSL
        Mac i Ubuntu (Linux)
      
      
        HLSL 11
        Windows, UWP, Xbox One i Series S/X
      
      
        PSSL
        PlayStation 4 i 5
      
    
  
  Podczas pisania kodu GLSL ES shaders zaleca się jak najściślejsze przestrzeganie oficjalnej specyfikacji języka, aby uniknąć błędów, ponieważ niektóre platformy docelowe mogą być bardziej restrykcyjne niż inne (np. platformy docelowe HTML5 i Opera GX, które mogą być bardziej restrykcyjne niż inne platformy, takie jak Windows, macOS, itp. jeśli chodzi o ograniczenia językowe).
   
  Tworzenie shadera
  Aby utworzyć zasób shader, wystarczy kliknąć prawym przyciskiem myszy na stronie  w Przeglądarce zasobów i wybrać Utwórz -> Shader. Po utworzeniu podstawowego zasobu shader, możesz użyć menu prawego przycisku myszy  na nowym zasobie, aby wybrać typ shader przed kontynuowaniem edycji kodu:
  Sam edytor kodu jest dzielony na dwa "programy" - Vertex i Fragment - podczas tworzenia nowego shader, a każdy z nich jest dostępny z zakładek w górnej części edytora. Oba są tworzone jednocześnie, ponieważ nie można utworzyć strony shader bez obu części. Nawet jeśli chcesz używać tylko fragmentu shader, musisz najpierw utworzyć "przelotowy" vertex shader, dlatego domyślnie każdy nowo tworzony program shader będzie miał już zakodowane vertex i fragmentowy shader (na zrzucie ekranu u góry strony widać, że użyliśmy widoku panelu edytora kodu, aby pokazać te dwa programy obok siebie... przydatne, gdy pracujesz nad oboma programami shader razem).
  Warto zauważyć, że można używać GLSL ES shaders na wszystkich platformach docelowych, ale aby działały one na platformie docelowej HTML5 , należy włączyć WebGL w Opcjach gry HTML5, w przeciwnym razie nie będą działać.
  Więcej informacji na temat funkcji shader i możliwości ich wykorzystania w serwisie GameMaker Studio 2 można znaleźć na kolejnych stronach:
  
    Funkcje shaderów - sekcja referencyjna GML dla shaders.
    Stałe shaderów - Stałe wbudowane w GameMaker Studio 2, które można wykorzystać podczas pisania shaders.
    Specyfikacja GLSL ES 1.0 - plik PDF dotyczący języka OpenGL ES 1.0 Shader, z którego korzysta strona GameMaker Studio 2.
    HLSL Language Reference - strony referencyjne firmy Microsoft dotyczące używaniajęzyka HLSL.
    Prezentacja języka PSSL - Przegląd języka PSSL w formie prezentacji.
  
   
   
   
  
    
      
        Powrót: Redaktorzy Aktywów
        Następny: Dźwięki
      
    
    © Copyright YoYo Games Ltd. 2021 Wszystkie prawa zastrzeżone.
  
  
  

