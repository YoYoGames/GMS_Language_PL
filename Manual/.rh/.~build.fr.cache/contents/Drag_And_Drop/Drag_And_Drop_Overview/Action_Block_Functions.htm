
  
  Funkcje skryptu bloku akcji
  Jedną z najważniejszych stron assets w przeglądarce zasobów jest skrypt asset. Scripts to specjalne strony assets, ponieważ są one zasadniczo "kontenerami" dla funkcji zdefiniowanych przez użytkownika i nie są wywoływane bezpośrednio w grze. Wszystkie strony scripts mają zasięg globalny i są automatycznie uruchamiane przez stronę GameMaker po uruchomieniu gry, dlatego można ich używać do definiowania zmiennych globalnych i funkcji, które mają być używane w całej grze.
  Do każdego serwisu DnD™ script można dodać jedną lub więcej funkcji zdefiniowanych przez użytkownika. Funkcje te tworzy się za pomocą akcji Deklaruj nową funkcję:
  Funkcje, które tu zdefiniujesz, będą miały zasięg globalny i będą działać jak każda wbudowana akcja DnD™, tzn. mogą przyjmować różne wartości - lub nie przyjmować żadnych - zwaneargumentami (lub parametrami), a następnie wykonywać zadanie, zwracając wartość lub nie zwracając nic, zależnie od potrzeb. Następnie wywołujesz funkcję w swojej grze za pomocą akcji Wywołanie funkcji , która wygląda tak:
  Aby utworzyć DnD™ script, wystarczy użyć prawego przycisku myszy  w dowolnym miejscu przeglądarki Asset i wybrać opcję Create , a następnie Script. Spowoduje to utworzenie nowego skryptu DnD™ script i otwarcie okna edytora:
  Nazwę script można nadać, klikając prawym przyciskiem myszy adres  w przeglądarce Asset i wybierając polecenie Zmień  nazwę (lub używając powolnego podwójnego kliknięcia lewym przyciskiem myszy ), ale należy pamiętać, że nazwa script musi być zgodna z ogólnymi zasadami dla assets, a więc musi zaczynać się od litery i zawierać tylko litery, cyfry lub symbol "_" pod paskiem. Na stronie script zostanie również wstępnie wypełniona akcja Declare A New Function (Deklaracja nowej funkcji), którą możesz wypełnić, dodając kolejne deklaracje funkcji w razie potrzeby (jedna strona script może zawierać wiele funkcji, co jest przydatne do grupowania funkcji o podobnym lub powiązanym zastosowaniu).
  Jak wspomniano powyżej, możesz przekazać funkcji wiele argumentów, a ona wykorzysta je do wykonania zadania, do którego została napisana. Aby to lepiej zrozumieć, weźmy na przykład dowolną wbudowaną akcję i zastanówmy się, jak ona działa... umieszczasz ją w zdarzeniu i przekazujesz pewną liczbę wartości, a ona sprawi, że twoja instancja coś zrobi. Funkcje zdefiniowane przez użytkownika działają dokładnie tak samo, a jedyną różnicą jest to, że to Ty je piszesz.
  Podczas definiowania nowej funkcji nadajesz jej nazwę oraz określasz nazwę argumentów, które przyjmuje, jeśli przyjmuje (funkcje mogą nie przyjmować żadnych argumentów lub przyjmować wiele argumentów, w zależności od tego, czego potrzebujesz). Jeśli podasz nazwy argumentów, to zostaną one użyte w akcjach wywoływanych przez funkcję jako zmienne lokalne przechowujące wartości wejściowe funkcji.
  Dobrą praktyką jest również dodanie komentarza do akcji, który wyjaśnia, co ona robi, zgodnie z zasadami JS Doc. Na przykład rozważmy tę funkcję set_vec():
  Aby wywołać powyższą stronę script, wystarczy użyć akcji Wywołaj funkcję, jak poniżej:
  Do funkcji można nie tylko przekazywać argumenty, ale także prosić o zwrócenie wartości (za pomocą akcji Return  ), dzięki czemu można ich używać na przykład do tworzenia metod obliczeniowych lub zwracania identyfikatora instancji po złożonym wykrywaniu kolizji, a także do wielu innych celów. Należy jednak pamiętać, że użycie return kończy działanie funkcji, a więc nie zostaną wykonane żadne akcje umieszczone po jej użyciu, co oznacza, że trzeba się dobrze zastanowić nad strukturą funkcji.
  Poniżej znajduje się funkcja Drag and Drop, która zwraca wartość:
  
  Powyższa funkcja po prostu sprawdza wszystkie instancje w room, aby zobaczyć, jaki jest ich adres object_index, i jeśli jedna z nich jest graczem object, funkcja zwróci true (kończąc wywołanie funkcji) lub false. Funkcję tę można by wywołać w następujący sposób:
  Wywołujemy więc funkcję i każemy jej utworzyć tymczasową (lokalną) zmienną do przechowywania zwróconej wartości (w tym przypadku jest to true lub false), a następnie sprawdzamy tę zmienną i podejmujemy odpowiednie działanie.
  Można również uczynić argumenty opcjonalnymi i zdefiniować ich wartość domyślną, dzięki czemu w przypadku niepodania ich w wywołaniu funkcji zostanie użyta wartość domyślna. Więcej informacji na ten temat można znaleźć w przykładzie rozszerzonym akcji 2.
  Tworząc funkcje do swojego DnD™ scripts możesz używać wszystkich tych samych akcji, co podczas dodawania akcji do zdarzenia object, a nawet możesz wywoływać funkcje z funkcji i w ten sposób tworzyć bardziej "modułowy" kod akcji. Takie budowanie scripts za pomocą funkcji może zaoszczędzić Ci wiele czasu przy tworzeniu tej samej akcji sequences, a także sprawić, że Twoja akcja sequences będzie łatwiejsza do odczytania i usuwania błędów.
   
   
   
  
    
      
        Powrót: Indeks
        Następny: Zmiana DnD™ na kod
      
    
    © Copyright YoYo Games Ltd. 2021 Wszystkie prawa zastrzeżone.
  
  
  

