
  
  Biblioteka działań na strukturach danych
  
  W grach często zachodzi potrzeba przechowywania informacji w precyzyjny i uporządkowany sposób. Na przykład można przechowywać listę przedmiotów, które nosi dana osoba, lub siatkę miejsc, które należy jeszcze odwiedzić. Do tego celu można użyć wielu zmiennych
    ale jeśli chcesz wykonać bardziej skomplikowane operacje, takie jak sortowanie danych lub wyszukiwanie określonego elementu, musisz napisać duże fragmenty kodu bloków akcji, który może być powolny w wykonaniu, trudny do debugowania i naprawdę uciążliwy w pisaniu!
  Aby temu zaradzić, GameMaker Studio 2 ma kilka wbudowanych struktur danych, do których można uzyskać dostęp za pomocą specjalistycznych funkcji. Na stronie Drag and Drop dostępne są cztery różne typy struktur danych (w przypadku GML jest ich sześć),
    Każdy z nich ma swoje zalety i wady, w zależności od rodzaju informacji, które chcesz przechowywać, oraz od tego, w jaki sposób chcesz nimi później manipulować - te cztery typy to:
  
    
      
        
        Listy
        Lista jest strukturą danych, która przechowuje informacje w sposób sekwencyjny, w miarę ich dodawania. Indeksy listy zaczynają się od 0 i rosną dla każdego elementu dodawanego na końcu listy, choć można również wstawiać dane na pozycję inną niż ostatnia. W przeciwieństwie do struktury danych Stack (objaśnionej poniżej) można w dowolnym momencie uzyskać dostęp do danych z dowolnego indeksu listy.
      
      
        
        Mapy
        Struktura danych mapy jest wyjątkowo użyteczna, ponieważ umożliwia przechowywanie klucz oraz wartość parami. Na przykład, postać w grze może mieć pewną liczbę różnych przedmiotów (klucze), a dla każdego przedmiotu może mieć ich pewną liczbę (wartości), tak jak w grze RPG, gdzie można mieć 10 mikstur zdrowia, 5 mikstur many i 100 złota. Mapy przechowują takie pary w jednym miejscu, a użytkownik może dodawać pary do mapy i wyszukiwać wartości odpowiadające określonym kluczom za pomocą kilku prostych funkcji. Mapy nie są posortowane w żaden (rozpoznawalny) sposób, co oznacza, że aby znaleźć konkretny klucz, trzeba przejść przez całą mapę (co jest bardzo powolne), nie ma też sposobu, aby trzymać dwa takie same klucze, ani nie można przypisać jednemu kluczowi dwóch wartości.
      
      
        
        Siatki
        Siatka to dwuwymiarowa tablica wartości, w której definiuje się jej szerokość i wysokość. Określa to całkowitą liczbę komórek siatki (pomnożoną przez szerokość i wysokość). Komórki te są następnie używane do przechowywania różnych wartości danych, które mogą być dowolnymi dozwolonymi typami danych. Ten typ struktury umożliwia ustawianie i pobieranie wartości komórek w siatce przez podanie ich pozycji x (kolumna) i y (wiersz) (zarówno wiersze, jak i kolumny zaczynają się od 0 i rosną do szerokości siatki - 1 oraz wysokości siatki -1). Podczas uzyskiwania dostępu do struktur danych siatki należy zawsze starać się używać wartości całkowitych dla pozycji komórek, ponieważ w przeciwnym razie wszystkie indeksy niecałkowite będą usuwane przez program GameMaker
          Studio 2, jeśli tego nie zrobisz. Jeśli nie jest to wymagane, trzeba będzie wykonać zaokrąglenie przed przekazaniem indeksu, który ma być sprawdzany.
      
      
        
        Stosy
        Struktura danych stosu jest tak zwaną strukturą LIFO (last-in-first-out). Możesz wciskać wartości na stos, a następnie usuwać je ze stosu, przy czym wartość, która została ostatnio wciśnięta na stos, jest pierwszą, która zostanie z niego wyciągnięta (pomyśl o stosie monet, gdzie każda dodawana moneta musi zostać najpierw usunięta, zanim będziesz mógł dostać się do pozostałych monet pod spodem). Stosy są często używane do obsługi przerwań, funkcji rekurencyjnych, a nawet do konstruowania podstawowej sztucznej inteligencji w grach.
      
    
  
   
  Zasadniczo wszystkie struktury danych działają w ten sam sposób - tworzysz strukturę danych i przechowujesz wartość jej indeksu w zmiennej. Następnie używasz tego indeksu do odwoływania się do struktury danych we wszystkich kolejnych wywołaniach funkcji, które mogą wykonywać na niej operacje. Na koniec,
    po zakończeniu pracy ponownie niszczysz strukturę danych, aby usunąć ją z pamięci. Możesz używać dowolnej liczby struktur jednocześnie, a wszystkie struktury mogą przechowywać zarówno strings, jak i wartości rzeczywiste.
  UWAGA: Podobnie jak wszystkie zasoby dynamiczne, struktury danych zajmują pamięć, dlatego powinny być zawsze niszczone, gdy nie są już potrzebne, aby zapobiec wyciekom pamięci, które spowolnią, a w końcu doprowadzą do awarii gry.
  Biblioteka Struktury danych ma następujące działania:
   
  
    
      
        
        Utwórz listę
      
      
        
        Utwórz mapę
      
      
        
        Utwórz siatkę
      
      
        
        Utwórz stos
      
      
        
        Wyczyść strukturę danych
      
      
        
        Dowolna struktura danych
      
      
        
        Dodaj do listy
      
      
        
        Usuń z listy
      
      
        
        Pobierz element listy o numerze
      
      
        
        Uzyskaj indeks elementu listy
      
      
        
        Wstaw do listy
      
      
        
        Uzyskaj liczbę elementów listy
      
      
        
        Ustaw wartość mapy
      
      
        
        Uzyskaj wartość mapy
      
      
        
        Usuń wpis na mapie
      
      
        
        Ustaw wartość siatki
      
      
        
        Pobierz wartość siatki
      
      
        
        Czysta siatka
      
      
        
        Przesuń na stos
      
      
        
        Pop Stack
      
      
        
        Jeśli struktura danych istnieje
      
      
        
        Jeśli struktura danych jest pusta
      
    
  
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
  
    
      
        Powrót: Indeks
        Następny: Akcje buforowe
      
    
    © Copyright YoYo Games Ltd. 2021 Wszystkie prawa zastrzeżone.
  
  
  

