
  
  robić / aż
  Funkcja do to inny sposób wielokrotnego iterowania po jednym lub kilku wyrażeniach, a tak naprawdę jest to "do... until" wyrażenie, ponieważ nie możesz mieć jednego bez drugiego, ponieważ mówisz GameMakerowi, aby robił coś, dopóki określone wyrażenie nie zwróci wartości true. Ma ona następującą postać:
  do
    {
        <statement>;
        <statement>;
        ...
    }
    until (<expression>);
  Instrukcja (która może być blokiem kodu składającym się z wielu instrukcji umieszczonych w nawiasach klamrowych {}) jest wykonywana do momentu, gdy wyrażenie zostanie uznane za true, przy czym początkowa instrukcja jest zawsze wykonywana co najmniej raz. Poniżej znajduje się przykład typowego sposobu użycia do... until:
  do
    {
        x = random(room_width);
        y = random(room_height);
    }
    until (place_free(x, y));
  Powyższy kod próbuje umieścić bieżący adres object w wolnym miejscu i ustawia zmienne x/y co najmniej raz, a następnie wykonuje tyle iteracji, ile potrzeba, aż wyrażenie place_free() zwróci adres true.
  Kiedy należy używać do / until loop? Należy go używać zawsze wtedy, gdy chcesz powtórzyć jedno lub więcej poleceń, ale nie wiesz, ile razy ma się ono powtórzyć, i chcesz mieć pewność, że polecenia zostaną wykonane przynajmniej raz przed zakończeniem loop.
  Można również użyć klawiszy break oraz continue wewnątrz do loops. Użycie break spowoduje natychmiastowe opuszczenie strony loop i przejście do dowolnego kodu znajdującego się w zdarzeniu lub funkcji po zakończeniu loop, np:
  var _id = noone;
    do
    {
        _id = list[| 0];
        if instance_exists(_id)
        {
            _break;
        }
        ds_list_delete(list, 0);
    }
    until (ds_list_empty(list));
    
    target = _id;
  
  W powyższym kodzie tworzymy zmienną lokalną i ustawiamy ją tak, aby przechowywała słowo kluczowe noone. Następnie wykonujemy do / until loop sprawdzając pierwszą pozycję listy DS, czy zawiera ona poprawny identyfikator instancji, i jeśli tak, to wykonujemy break loop , w przeciwnym razie wartość dla pozycji listy jest usuwana. Po zakończeniu loop (albo przez break, albo dlatego, że lista jest pusta) wartość zmiennej lokalnej jest przypisywana do zmiennej instancji target.
  Przykładem użycia continue w serwisie do / until loop może być:
  do
    {
        var _x = random(room_width);
        var _y = random(room_height);
        if (instance_position(_x, y, obj_Enemy)
        {
            continue;
        }
        instance_create_layer(_x, _y, "Instances", obj_Enemy);
    }
    until (instance_count(obj_Enemy) >= 10);
  Ten kod wygeneruje losową pozycję room, a następnie sprawdzi, czy na tej pozycji istnieje instancja object obj_Enemy. Jeśli tak, to bieżąca iteracja loop zostanie zakończona przy użyciu continue i rozpocznie się nowa iteracja, a jeśli nie, to na losowej pozycji zostanie utworzona instancja object obj_Enemy. loop zakończy się tylko wtedy, gdy w object znajdzie się 10 lub więcej instancji room.
   loops Ostatnia uwaga: uważaj na stronę do loop, ponieważ możesz łatwo sprawić, że będzie ona wieczna. W takim przypadku gra zawiesi się, nie będzie reagować na żadne polecenia użytkownika i będzie on musiał ją zamknąć.
  Więcej przykładów słów kluczowych loop można znaleźć w sekcjach repeat, while, oraz for.
   
   
   
  
    
      
        Powrót: Cechy językowe
        Następny: for
      
    
    © Copyright YoYo Games Ltd. 2021 Wszystkie prawa zastrzeżone.
  
  
  

