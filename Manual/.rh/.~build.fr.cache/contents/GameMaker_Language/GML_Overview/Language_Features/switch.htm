
  
  przełącznik
  W wielu sytuacjach chcemy, aby instancje wykonywały różne czynności w zależności od określonej wartości. Możesz to zrobić, używając kilku następujących po sobie if / else ale gdy liczba możliwych wyborów przekracza dwa lub trzy, zwykle łatwiej jest użyć instrukcji switch.
  Polecenie switch ma następującą składnię:
  switch (<expression>)
    {
        case <constant1>:
            <code>
        break;
    
        case <constant2>:
            <code>
        break;
        
        // more cases (with breaks)
    
        default:
            <code>;
    }
  
  Działa to w następujący sposób:
  
    Najpierw wykonywane jest wyrażenie.
    Następnie jej wynik jest porównywany z różnymi stałymi występującymi po każdym zwyrażeń case. Kiedy mówimy "stała", mamy na myśli to, że wartość w danym przypadku nie może być zmiennym wyrażeniem, lecz musi być stałą wartością dowolnego typu danych, taką jak "walka", 3 lub słowo kluczowe noone. 
    Wykonywanie rozpoczyna się od pierwszej instrukcji case z pasującą wartością, aż do napotkania instrukcji break .
    Jeśli żadna z instrukcji case nie zawiera pasującej wartości, zostanie wykonana instrukcja default. Nie jest wymagane posiadanie instrukcji default, a jeśli nie ma żadnej, to nie zostanie podjęta żadna akcja, gdy nie ma pasujących przypadków. Instrukcja default może być umieszczona w dowolnym miejscu bloku switch, jednak tradycyjnie umieszcza się ją na dole, po wszystkich przypadkach.
  
  UWAGA Instrukcja switch będzie kontynuować wykonywanie kodu w obrębie case, dopóki nie zostanie napotkana instrukcja break. Jeśli nie użyjesz breaks na końcu swoich przypadków, spowoduje to "przeciek" switch do następnej sekcji case, a nawet do sekcji default, jeśli na drodze nie ma breaks. Może to powodować niezamierzone zachowania, ponieważ wykonanie jednej strony case może spowodować wykonanie wielu stron case, dlatego należy używać strony break tam, gdzie jest to wskazane.
  Prostym przykładem użycia oświadczenia switch może być coś takiego:
  switch (player_lives)
    {
        case 3:
            draw_sprite(20, 20, spr_face_healthy);
        break;
    
        case 2:
            draw_sprite(20, 20, spr_face_hurt);
        break;
    
        case 1:
            draw_sprite(20, 20, spr_face_fatal);
        break;
    
        default:
            draw_sprite(20, 20, spr_face_fainted);
        break;
    }
  
  Zauważ, że do wykonania tej samej instrukcji można użyć wielu instrukcji case, ponieważ instrukcja break nie zawsze jest wymagana dla każdej z nich case. Jeśli dla danego case nie ma instrukcji break, wykonywanie jest po prostu kontynuowane z kodem dla następnego przypadku, np:
  switch (keyboard_key)
    {
        case vk_left:
        case ord("A"):
            x -= 4;
        break;
    
        case vk_right:
        case ord("D"):
            x += 4;
        break;
    
        case vk_up:
        case ord("W"):
            y -= 4;
        break;
    
        case vk_down:
        case ord("S"):
            y += 4;
        break;
    }
  
  Powyższy kod wykorzystuje stronę switch do sprawdzenia zdarzenia na klawiaturze, a następnie porównuje je z każdą z wymienionych stron case. Jeśli spełnia on którąś z wymaganych wartości, wykonywany jest odpowiedni kod. Zwróć uwagę, że strona switch może sprawdzać wiele stron cases i wykonywać kod aż do następnej break, aby umożliwić użycie różnych klawiszy w celu uzyskania tego samego wyniku.
  Każda strona case może mieć swój własny kod, dzięki czemu można utworzyć system "dziedziczenia", w którym sprawa wykonuje swój własny kod, a następnie kod dla następnej sprawy.
   
   
   
  
    
      
        Powrót: Cechy językowe
        Następny: break
      
    
    © Copyright YoYo Games Ltd. 2022 Wszystkie prawa zastrzeżone.
  
  
  

