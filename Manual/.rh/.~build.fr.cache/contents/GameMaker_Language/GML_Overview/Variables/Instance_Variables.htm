
  
  Zmienne instancji
  Zmienna instancji jest tworzona w ramach jednej instancji object i jest uważana za unikatową dla tej instancji - tzn. wiele instancji tej samej object może mieć tę samą zmienną, ale każda zmienna może mieć inną wartość, ponieważ jest unikatowa dla każdej instancji.
    każdej instancji. Ale jak tworzy się zmienną instancji? Cóż, nowe zmienne tworzy się po prostu przypisując im wartość, jak pokazano na tym małym przykładzie (nazywa się to deklarowaniem zmiennej):
  potions = 12; life = 100; name = "Jock MacSweeney"; strength = 5.5; armour = -2;
  Jak widać, wystarczy podać nazwę, a następnie wartość (wartość może być dowolnego typu danych), aby ustawić zmienną i mieć ją gotową do użycia w ramach instancji object, dla której kodujemy (należy pamiętać, że wartość może
    pochodzić z wartości zwracanej przez funkcję lub wyniku operacji między innymi zmiennymi itd.) Zmienne te można następnie wykorzystywać i modyfikować na wiele sposobów w ramach danej instancji, na przykład ten kod może znaleźć się w zdarzeniu kolizji
    i użyć go do odjęcia pewnej wartości od zmiennej "life":
  life -= 5 + armour;
  Jeśli "life" ma wartość 100, to teraz będzie miał wartość 97 (100 - (5 + -2) = 97). To prosty przykład i można by zastąpić "armour" rzeczywistą wartością -2,
    ale co się stanie, jeśli ta wartość jest zakodowana w wielu miejscach, a potem zdecydujesz się ją zmienić? Musiałbyś przejrzeć WSZYSTKO w swoim kodzie i zmienić każde -2 na nową wartość, co jest czasochłonne.
    co jest czasochłonne i bardzo podatne na błędy! Jeśli jednak użyjesz zmiennej, wystarczy, że przypiszesz jej nową wartość, a kod automatycznie będzie jej używał od tego momentu, co czyni go o wiele bardziej elastycznym i łatwiejszym do naprawienia
    w razie wystąpienia problemu. Należy również zauważyć, że nawet jeśli wartość nie będzie się zmieniać, o wiele łatwiej jest zapamiętać, co oznacza zmienna o nazwie "life", niż patrzeć tylko na liczbę.
  GameMaker Studio 2 ma także zbiór "wbudowanych" zmiennych instancji, więc powinieneś o nich wiedzieć, ponieważ możesz nazwać tak samo jedną ze swoich zmiennych instancji lub chcieć mieć własną zmienną globalną o tej samej nazwie i zastanawiać się, dlaczego
    i zastanawiać się, dlaczego pojawiają się błędy. Łatwo je jednak zauważyć, ponieważ w edytorze kodu są wyświetlane innym kolorem, pojawiają się także w autouzupełnianiu i są widoczne na pasku u dołu edytora kodu.
  Istnieje wiele funkcji runtime, które pomagają w pracy ze zmiennymi instancji i które są wymienione w poniższym rozdziale:
  
    Funkcje zmienne
  
   
   
   
  
    
      
        Powrót: Zmienne i zakres zmiennych
        Następny: Zmienne globalne
      
    
    © Copyright YoYo Games Ltd. 2021 Wszystkie prawa zastrzeżone.
  
  
  

