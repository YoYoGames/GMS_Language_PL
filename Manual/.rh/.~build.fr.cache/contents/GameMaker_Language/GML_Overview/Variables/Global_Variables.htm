
  
  Zmienne globalne
  Podstawowy opis zmiennej globalnej to taka, która po zadeklarowaniu nie należy do żadnej konkretnej instancji, a mimo to może być dostępna dla wszystkich. Podobnie jak zmienne lokalne, zmienne globalne muszą być zadeklarowane przy użyciu identyfikatora, ale w przeciwieństwie do zmiennych lokalnych, zmienna globalna pozostaje w pamięci do końca gry. Można więc utworzyć zmienną globalną, aby śledzić (na przykład) liczbę pocisków, które ma gracz, a następnie aktualizować tę zmienną w różnych momentach gry, z dowolnej instancji lub funkcji i w dowolnym czasie. Zasadniczo zmienna globalna nie należy do żadnej konkretnej instancji i może być dostępna, zmieniana i używana przez wszystkie instancje, a wszelkie zmiany dokonane w zmiennej są "globalne", w tym sensie, że wszystkie instancje korzystające z tej zmiennej będą dotknięte zmianami. Przyjrzyjmy się przykładowi:
  global.food = 5;
  Deklarujemy zmienną "food", pisząc najpierw "global", a następnie ".", aby poinformować GameMaker Studio 2, że zmienna ta ma teraz zasięg globalny. Od tej pory będziemy musieli używać tej formy za każdym razem, gdy będziemy chcieli uzyskać dostęp do tej zmiennej lub zmienić ją w jakikolwiek sposób. Utworzyliśmy więc nową zmienną o nazwie "food" i zadeklarowaliśmy ją jako globalną. Teraz każda instancja lub funkcja może używać i zmieniać tę zmienną w dowolny sposób, a wszystkie inne instancje będą to "widzieć". Na przykład możemy mieć inną żywność object, z którą gracz się zderzy, a w zdarzeniu kolizji mamy:
  global.food +=1;
  Mamy też inną stronę object, która rysuje tę wartość w następujący sposób:
  draw_text(32, 32, "food = " + string(global.food));
  Dzięki zmiennym globalnym możemy zmieniać wartości i widzieć, że zmiany te są odzwierciedlone we wszystkich instancjach objects, które odwołują się do tej zmiennej. Podobnie jak w przypadku zmiennych lokalnych, należy uważać, aby nie nazywać zmiennych globalnych tak samo jak zmiennych instancji, ponieważ może to powodować problemy i sprawiać, że do gry będą wkradać się błędy wynikające z nakładania się zmiennych, co czasami może być trudne do usunięcia. Generalnie powinieneś mieć jedną stronę object, na której deklarujesz wszystkie zmienne globalne na samym początku gry (na przykład w zdarzeniu Room Start Event pierwszego obiektu umieszczonego na pierwszej stronie room gry) lub jedną funkcję skryptu, która deklaruje je wszystkie razem, ponieważ w ten sposób masz wygodne miejsce, do którego możesz wrócić i odwołać się do wszystkiego naraz, jeśli chcesz sprawdzić nazwę zmiennej lub zmienić jej wartość.
  GameMaker Studio 2 ma także zbiór "wbudowanych" zmiennych globalnych, więc powinieneś o nich wiedzieć, ponieważ możesz nazwać tak samo jedną ze swoich zmiennych instancji lub mieć własną zmienną globalną o tej samej nazwie i zastanawiać się, dlaczego pojawiają się błędy! Łatwo je jednak zauważyć, ponieważ w edytorze kodu są one wyświetlane w innym kolorze, a także pojawiają się na dolnym pasku autouzupełniania. Większość wbudowanych zmiennych globalnych ma bardzo konkretne zastosowania, wymienione w odpowiednich rozdziałach podręcznika - są jednak dwie ważne zmienne, które są często używane, a nie zostały wymienione w innych miejscach:
  
    async_load
    event_data
  
  Istnieją również trzy przestarzałe wbudowane zmienne globalne, o których należy pamiętać (zmienne te są przeznaczone wyłącznie do obsługi starszych projektów z poprzednich wersji GameMaker i powinny nie mogą być używane w nowych projektach):
  
    score
    health
    lives
  
  Wreszcie, istnieją dwie zmienne, które można wykorzystać na stronie script funkcje i metody:
  
    argument
    argument_count
  
  Do deklarowania zmiennych globalnych można również użyć następującej formy, ale jest to dołączone tylko dla zachowania kompatybilności wsteczneji nie jest zalecane używanie tej formy w nowych projektach, ponieważ przyszłe wersje GameMaker mogą jej nie obsługiwać.
  Drugą formą tworzenia zmiennych globalnych jest zadeklarowanie ich jako takich za pomocą deklaracji globalvar, podobnie jak w przypadku zmiennej lokalnej za pomocą deklaracji var.
  WAŻNE! Deklaracja globalvar jest przestarzała i jest obsługiwana tylko do starszych celów. Do oznaczania zmiennych globalnych należy zawsze używać identyfikatora global..
  Ta (przestarzała) deklaracja byłaby używana w następujący sposób:
  globalvar food;
    food = 5;
  Po zadeklarowaniu w ten sposób zmienna "food" jest teraz uznawana za globalną i nie wymaga prefiksu global. - co oznacza również, że o wiele trudniej jest zidentyfikować zmienne globalne w kodzie i o wiele łatwiej jest doprowadzić do nakładania się zmiennych, gdy używasz tej samej nazwy zmiennej w różnych objects lub z zainstalowanej strony extensions. Po zadeklarowaniu zmiennej globalnej w ten sposób dostęp do niej uzyskuje się w następujący sposób:
  food += 2;
  lub:
  draw_text(32, 32, "food = " + string(food));
  Jak widać, nie mając nic, co wskazywałoby na to, że zmienna ma zasięg globalny, potencjalnie narażasz się na wiele subtelnych problemów, które mogą pojawić się w grze, dlatego należy unikać tej deklaracji.
  Istnieje kilka funkcji pomocnych w posługiwaniu się zmiennymi globalnymi, które można znaleźć na następnej stronie:
  
    Funkcje zmienne
  
   
   
   
  
    
      
        Powrót: Zmienne i zakres zmiennych
        Następny: Stałe
      
    
    © Copyright YoYo Games Ltd. 2022 Wszystkie prawa zastrzeżone.
  
  
  

