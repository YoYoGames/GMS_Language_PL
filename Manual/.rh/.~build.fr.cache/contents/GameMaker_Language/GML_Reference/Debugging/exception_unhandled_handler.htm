
  
  exception_unhandled_handler
  Ta funkcja runtime może być użyta do "przejęcia" domyślnego komunikatu o błędzie GameMakera, gdy wystąpi wyjątek runtime. Podajesz metodę lub funkcję, która zostanie wywołana w momencie wystąpienia wyjątku, a jej pierwszym argumentem będzie struct (znany jako Struktura wyjątków) zawierający informacje o wyjątku. Ten struct ma następujący format:
  
    
      
      
      
    
    
      
        Struktura wyjątków
      
      
        Zmienna
        Typ
        Opis
      
      
        message
        String
        Krótka wiadomość dla wyjątków
      
      
        longMessage
        String
        Dłuższy komunikat dotyczący wyjątku
      
      
        script
        String
        Adres string, który opisuje, skąd pochodzi wyjątek
      
      
        line
        Real
        Numer wiersza, w którym wystąpił wyjątek
      
      
        stacktrace
        Array z Strings
        Tablica strings będąca stosem wywołań dla ramki, w której został wygenerowany wyjątek
      
    
  
  Jako argument można też podać undefined, co spowoduje usunięcie niestandardowego mechanizmu obsługi wyjątków (jeśli został ustawiony) i przywrócenie domyślnego komunikatu o błędzie programu GameMaker.
  Ta funkcja zwróci poprzednio ustawioną metodę obsługi wyjątków, jednak jeśli nie została ona zmieniona lub została zresetowana za pomocą undefined, to zwróci po prostu undefined.
  Przekazanie metody do tej funkcji oznacza, że użytkownikowi nie zostanie wyświetlony komunikat o błędzie, a Ty będziesz mógł samodzielnie obsłużyć wyjątek. Nie możesz jednak użyć tej funkcji do "wyłamania się" z wyjątku, aby kontynuować grę, ponieważ gra zostanie zamknięta po wywołaniu obsługi wyjątku. Nie można też wywoływać funkcji, które utrzymują grę w ruchu dłużej niż do ostatniej klatki (np. game_restart()), ponieważ gra musi zostać zamknięta po awarii.
  Należy zauważyć, że kontekst uruchomienia metody nie znajduje się w zdarzeniu, więc w tym momencie nic nie może być wyświetlane na ekranie. Ogólnie rzecz biorąc, najbezpieczniejszą rzeczą, jaką można by zrobić w tym momencie, jest zapisanie pliku z informacjami o kontekście wyjątku, aby można je było - na przykład - przetworzyć podczas następnego uruchomienia gry, a następnie zająć się nimi.
  Zwróć uwagę, że jeśli w podanej metodzie użyjesz instrukcji return, to podana wartość zostanie przekonwertowana na liczbę całkowitą i użyta jako kod zakończenia runnera.
   
  Składnia:
  exception_unhandled_handler(user_handler);
  
    
      
        Argument
        Typ
        Opis
      
      
        user_handler
        Metoda
        The method (user-defined function) to use as the exception handler, or undefined aby przywrócić ustawienia domyślne.
      
    
  
   
  Zwroty:
  Method (or undefined)
   
  Przykład:
  exception_unhandled_handler(function(ex)
    {
        // Print some messages to the output log
        show_debug_message( "--------------------------------------------------------------");
        show_debug_message( "Unhandled exception " + string(ex) );
        show_debug_message( "--------------------------------------------------------------");
    
        // Write the exception struct to a file
        if file_exists("crash.txt") file_delete("crash.txt");
        var _f = file_text_open_write("crash.txt");
        file_text_write_string(_f, string(ex));
        file_text_close(_f);
    
        // Show the error message (for debug purposes only)
        show_message(ex.longMessage);
    
        return 0;
    });
  
  Powyższy kod utworzy metodę obsługi wyjątków i użyje jej do zapisania pliku z danymi o wyjątkach, a także wyświetli długi komunikat o błędzie w nowym oknie podręcznym w celach debugowania.
   
   
  
    
      
        Powrót: Debugowanie
        Następny: get_integer
      
    
    © Copyright YoYo Games Ltd. 2022 Wszystkie prawa zastrzeżone.
  
  
  

