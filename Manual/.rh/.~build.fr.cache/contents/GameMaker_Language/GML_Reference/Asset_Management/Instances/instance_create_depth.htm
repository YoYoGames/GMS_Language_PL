
  
  tworzenie_instancji_głębokość
  Za pomocą tej funkcji można utworzyć nową instancję określonej strony object w dowolnym punkcie strony room i na podanej głębokości. Głębokość może być dowolną wartością, przy czym im mniejsza głębokość, tym bliżej kamery będą rysowane obiekty, a im większa głębokość, tym dalej od kamery, więc instancja na głębokości -200 zostanie narysowana nad instancją na głębokości +300 (na przykład).
  Zauważ, że ta funkcja faktycznie utworzy warstwę room dla instancji, ponieważ wszystkie instancje muszą znajdować się na warstwie w room, ale ponieważ jest to warstwa zarządzana (tzn. nie taka, którą utworzyłeś za pomocą kodu lub w room, ale taka, którą GameMaker utworzył automatycznie). Nie masz dostępu do tej warstwy, a zmienna layer zwróci wartość -1.
  WAŻNE Minimalna i maksymalna głębokość warstwy wynosi od -16000 do 16000. Wszystko, co zostanie umieszczone na warstwie o głębokości spoza tego zakresu, nie zostanie narysowane, choć wszystkie wydarzenia będą przebiegać normalnie.
  Funkcja ta zwraca wartość id która może być przechowywana w zmiennej i użyta do uzyskania dostępu do tej instancji. Zauważ, że funkcja ta wywoła również zdarzenie Create dla tworzonej instancji przed kontynuowaniem kodu lub akcji dla zdarzenia, które wywołało funkcję.
  Struktura opcjonalna
  Ostatni argument, var_struct, jest opcjonalny i przyjmuje postać struct zawierającą dodatkowe zmienne dla nowej instancji.
  Zmienne z tej strony struct są stosowane do nowej instancji przed uruchomieniem zdarzenia Create, ale po ustawieniu jej definicji zmiennych.
  Oznacza to, że wartości z tej strony struct można odczytać w zdarzeniu Create nowej instancji. Zobacz przykład 2 na dole.
  Wartości zastosowane do nowej instancji za pośrednictwem tej strony struct mogą być dowolnego typu, w tym method zmienne. Zmienne wbudowane również mogą być zmieniane.
  UWAGA Zmienne ze strony struct są "płytko kopiowane" do nowej instancji, co oznacza, że tablice, structs i inne zasoby są kopiowane przez odniesienie, a nie powielane.
   
  Składnia:
  instance_create_depth(x, y, depth, obj);
  
    
      
        Argument
        Typ
        Opis
      
      
        x
        Real
        The x position the object will be created at
      
      
        y
        Real
        The y position the object will be created at
      
      
        depth
        Real
        The depth to assign the created instance to
      
      
        obj
        Obiekt Aktywa
        The object index of the object to create an instance of
      
      
        var_struct
        Struktura
        OPTIONAL Struktura zawierająca zmienne, które mają być przypisane do nowej instancji
      
    
  
   
  Zwroty:
  Instance ID
   
  Przykład 1:
  var inst = instance_create_depth(x, y, -100, obj_Bullet);
    with (inst)
    {
        speed = other.shoot_speed;
        direction = other.image_angle;
    }
  Powyższy kod tworzy nową instancję object obj_bullet na głębokości -100 i zapisuje identyfikator instancji w zmiennej. Zmienna ta jest następnie używana do przypisywania speed i direction do nowej instancji.
  Spowoduje to najpierw utworzenie instancji, uruchomienie jej zdarzenia Create, a następnie przypisanie wartości jej zmiennym.
  Jeśli chcesz przypisać jakieś zmienne przed uruchomieniem zdarzenia Utwórz, zobacz poniższy przykład.
   
  Przykład 2:
  var inst = instance_create_depth(x, y, -100, obj_bullet,
    {
        speed : shoot_speed,
        direction : image_angle
    });
  Powyższy kod tworzy instancję obj_bullet, a jako ostatni argument przekazuje adres struct.
  Strona struct zawiera zmienne określające prędkość i kierunek. Pobierają one swoje wartości z instancji wywołującej, bez potrzeby używania innych.
  Zmienne te są stosowane do nowej instancji przed uruchomieniem zdarzenia Create.
  Nie jesteś ograniczony do literału struct, ponieważ możesz również przekazać zmienną przechowującą istniejącą strukturę struct, lub utworzyć strukturę new strukturę z constructor.
   
   
  
    
      
        Powrót: Instancje
        Następny: instance_destroy
      
    
    © Copyright YoYo Games Ltd. 2022 Wszystkie prawa zastrzeżone.
  
  
  

