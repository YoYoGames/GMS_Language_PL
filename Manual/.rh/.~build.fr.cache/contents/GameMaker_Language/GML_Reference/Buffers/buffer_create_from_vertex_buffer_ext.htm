
  
  buffer_create_from_vertex_buffer_ext
  Funkcja ta służy do alokowania w grze fragmentu pamięci w postaci strony buffer wypełnionej danymi z utworzonego wcześniej bufora wierzchołków. Funkcja zwraca unikalny identyfikator bufora, który powinien być przechowywany w zmiennej i używany we wszystkich dalszych wywołaniach funkcji na stronie buffer. Funkcja pobiera identyfikator dla vertex buffer, który ma być użyty (zwrócony przez funkcję vertex_create_buffer()na przykład), a do określenia typu buffer używa się następujących stałych:
  
    
      
        Stała
        Opis
      
      
        buffer_fixed
        Strona buffer o stałej wielkości.
      
      
        buffer_grow
        Strona buffer, która będzie "rosła" dynamicznie w miarę dodawania danych.
      
      
        buffer_wrap
        Strona buffer, na której dane będą "zawijane". Gdy dodawane dane osiągną limit rozmiaru strony buffer, nadpisanie zostanie umieszczone z powrotem na początku strony buffer, a dalszy zapis będzie kontynuowany od tego miejsca.
      
      
        buffer_fast
        Specjalny "pozbawiony" adres buffer, na którym odczyt/zapis jest bardzo szybki. Można go używać tylko z typami danych buffer_u8 i musi być wyrównany do 1 bajtu.
      
      
        buffer_vbuffer
        Ten typ strony buffer należy stosować wyłącznie jako stronę vertex buffer.
      
    
  
  Oprócz typu buffer należy także ustawić wyrównanie bajtów w buforze buffer. Wartość ta zależy od danych, które mają być przechowywane w buforze buffer, i w większości przypadków wartość 1 jest jak najbardziej odpowiednia. Należy jednak pamiętać, że w przypadku niektórych operacji określone wyrównanie jest niezbędne, a nieprawidłowe wyrównanie może powodować błędy (więcej szczegółów na temat wyrównania można znaleźć w części Wyrównanie bufora). Poniżej przedstawiono ogólne wytyczne pokazujące, jakie wartości są najbardziej odpowiednie dla poszczególnych typów danych (w razie wątpliwości należy używać wyrównania do 1):
  
    Łańcuchy powinny być wyrównane do 1 bajtu.
    Znakowe lub niepodpisane 8-bitowe liczby całkowite mogą być wyrównane do dowolnej wartości, ale należy pamiętać, że w przypadku szybkiej strony buffer (zob. buffer_write()) muszą być wyrównane do 1.
    Podpisane lub niepodpisane 16-bitowe liczby całkowite powinny być wyrównane do 2 bajtów.
    Podpisane lub niepodpisane 32-bitowe liczby całkowite powinny być wyrównane do 4 bajtów.
    Dane zmiennoprzecinkowe o długości do 16 bitów powinny być wyrównane do 2 bajtów. (Obecnie nieobsługiwane!)
    Dane zmiennoprzecinkowe o długości do 32 bitów powinny być wyrównane do 4 bajtów.
    Dane zmiennoprzecinkowe o długości do 64 bitów powinny być wyrównane do 8 bajtów.
  
  UWAGA: Adres Vertex buffers jest wyrównany do 1 bajta, ale można utworzyć adres buffer z dowolnym wyrównaniem, w zależności od tego, jak chcemy traktować dane, ponieważ dane z adresu vertex są po prostu surową kopią pamięci do adresu buffer.
  Ostatnie dwa argumenty służą do określenia zakresu danych vertex, które mają zostać skopiowane do nowo utworzonej strony buffer. Początek vertex może mieć dowolną wartość z przedziału od 0 do liczby wierzchołków -1, a następnie należy podać liczbę wierzchołków od tego punktu do skopiowania. Można użyć funkcji vertex_get_number() na stronie vertex buffer, aby uzyskać całkowitą liczbę przechowywanych wierzchołków.
  UWAGA: Ważne jest, aby usuwać z pamięci wszelkie dynamicznie tworzone zasoby, gdy nie są już potrzebne, aby zapobiec wyciekom pamięci, więc po zakończeniu pracy z utworzoną stroną buffer należy ją ponownie zwolnić, korzystając z polecenia buffer_delete(). Zwróć też uwagę, że vertex buffer użyty do utworzenia nowego buffer również nie jest usuwany z pamięci i powinieneś użyć funkcji vertex_delete_buffer() gdy nie jest już potrzebna.
   
  Składnia:
  buffer_create_from_vertex_buffer_ext(vertex_buffer, type, alignment, start_vertex, num_vertices)
  
    
      
        Argument
        Typ
        Opis
      
      
        vertex_buffer
        Vertex Buffer ID
        The vertex buffer index to use.
      
      
        type
        Typ bufora Stała
        The type of buffer to create (see the constants list below).
      
      
        alignment
        Real
        The byte alignment for the buffer
      
      
        start_vertex
        Real
        The starting vertex.
      
      
        num_vertices
        Real
        The total number of vertices to copy.
      
    
  
   
  Zwroty:
  Buffer ID
   
  Przykład:
  var v_num = vertex_get_number(model_buff); player_buffer = buffer_create_from_vertex_buffer(model_buffer, buffer_grow, 1, 0, v_num - 1);
  Powyższy kod przydziela pamięć dla strony buffer, a następnie kopiuje do niej dane wszystkich wierzchołków z podanej strony vertex buffer, zwracając indeks nowej strony buffer, który jest przechowywany w zmiennej "player_buffer", do wykorzystania w przyszłości.
   
   
   
  
    
      
        Powrót: Bufory
        Następny: buffer_delete
      
    
    © Copyright YoYo Games Ltd. 2022 Wszystkie prawa zastrzeżone.
  
  
  

