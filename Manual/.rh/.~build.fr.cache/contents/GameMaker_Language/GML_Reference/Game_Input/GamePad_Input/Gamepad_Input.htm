
  
  Wejście gamepada
  GameMaker Studio 2 ma kilka specjalnych funkcji, których można używać do wykrywania analogowych i cyfrowych elementów sterujących z wielu podłączonych gamepadów. Funkcje te działają podobnie jak wejścia urządzeń, ponieważ można wykryć do czterech różnych podłączonych gamepadów XInput (oraz do 8 gamepadów DirectInput) i obsługiwać wejścia z każdego z nich za pomocą tych samych funkcji. Należy pamiętać, że gdy gamepad jest podłączany do urządzenia (lub odłączany), wyzwalane jest asynchroniczne zdarzenie systemowe, w którym można zastosować odpowiednie funkcje.
  Gniazda dla gamepadów są indeksowane od 0 w górę, a to, jakie gniazdo zostanie przypisane danemu gamepadowi, zależy od wielu czynników, między innymi od systemu operacyjnego, na którym działa projekt. W systemie docelowym Windows, sloty 0 - 3 włącznie są przeznaczone tylko dla gamepadów Xinput, czyli kontrolerów Xbox360 i innych. Można jednak sprawdzić także gniazda 4 - 11 włącznie dla gamepadów DirectInput, co oznacza, że po podłączeniu przez te gniazda można wykryć wiele innych modeli kontrolerów. Na innych platformach pady mogą być wykrywane w dowolnym slocie, który został przypisany przez system operacyjny - może to być slot 3, 20 lub więcej. Przykładowo, urządzenia z systemem Android zapisują gamepady bluetooth w slocie, a następnie rezerwują ten slot dla danego gamepada w przyszłości, niezależnie od tego, czy jest on podłączony, czy nie, więc nie można zakładać, że pojedynczy podłączony gamepad jest podłączony do slotu 0, gdyż prawdopodobnie tak nie będzie.
  Warto zauważyć, że w przypadku korzystania z gamepadów DirectInput na Windows lub gamepadów ogólnych na innych platformach, stałe podane poniżej mogą nie odpowiadać dokładnie przyciskom, których można się spodziewać po ich naciśnięciu, ze względu na fragmentaryczny i niestandardowy sposób implementacji API przez producentów kontrolerów. Z tego powodu zaleca się wprowadzenie w grach jakiegoś ekranu ustawień gamepada, na którym można przedefiniować przyciski gamepada na podstawie danych wejściowych z dowolnego podłączonego urządzenia, aby uniknąć problemów (funkcje "mapowania" gamepada mogą w tym pomóc na stronach Windows Desktop, Ubuntu, macOS i Android, natomiast na wszystkich innych trzeba to zrobić samodzielnie za pomocą kodu).
  Stałe wejściowe
  Podczas pracy z funkcjami gamepada dane wejściowe mogą pochodzić z osi, przycisków lub kapeluszy, które GameMaker Studio 2 przypisze do następujących wbudowanych stałych (należy pamiętać, że "kapelusze" są zwykle wykrywane tylko w niestandardowych kontrolerach):
  
    
      
        Przycisk gamepada Stała
      
      
        Stała
        Opis
      
      
        gp_face1
        Górny przycisk 1 (odpowiada  literze "A" na kontrolerze Xbox 360 i krzyżykowi na kontrolerze PS)
      
      
        gp_face2
        Górny przycisk 2 (odpowiada  literze "B" na kontrolerze Xbox 360 i kółku na kontrolerze PS)
      
      
        gp_face3
        Górny przycisk 3 (odpowiada symbolowi "X" na kontrolerze Xbox 360 i kwadratowi na kontrolerze PS)
      
      
        gp_face4
        Górny przycisk 4 (odpowiada literze "Y" na kontrolerze Xbox 360 i trójkątowi na kontrolerze PS)
      
      
        gp_shoulderl
        Przycisk na lewym ramieniu
      
      
        gp_shoulderlb
        Spust lewego ramienia
      
      
        gp_shoulderr
        Przycisk prawego ramienia
      
      
        gp_shoulderrb
        Spust prawego ramienia
      
      
        gp_select
        Przycisk wyboru (na kontrolerze DS4 uruchamia się on po naciśnięciu touchpada)
      
      
        gp_start
        Przycisk uruchamiania (jest to przycisk "Opcje" na kontrolerze PS4)
      
      
        gp_stickl
        Wciśnięty lewy drążek (jako przycisk)
      
      
        gp_stickr
        Wciśnięty prawy drążek (jako przycisk)
      
      
        gp_padu
        D-pad w górę
      
      
        gp_padd
        D-pad w dół
      
      
        gp_padl
        D-pad w lewo
      
      
        gp_padr
        D-pad w prawo
      
    
  
  
    
      
      
    
    
      
        Stała osi gamepada
      
      
        Stała
        Opis
      
      
        gp_axislh
        Oś pozioma lewego drążka (analogowa)
      
      
        gp_axislv
        Oś pionowa lewego drążka (analogowa)
      
      
        gp_axisrh
        Oś pozioma prawego drążka (analogowa)
      
      
        gp_axisrv
        Oś pionowa prawego drążka (analogowa)
      
      
        Poniższe stałe mogą być używane tylko z gamepadem DualSense na PS4 lub PS5
      
      
        gp_axis_acceleration_x*
        Przyspieszenie gamepada na osi X
      
      
        gp_axis_acceleration_y*
        Przyspieszenie gamepada na osi Y
      
      
        gp_axis_acceleration_z*
        Przyspieszenie gamepada na osi Z
      
      
        gp_axis_angular_velocity_x*
        Prędkość kątowa gamepada na osi X
      
      
        gp_axis_angular_velocity_y*
        Prędkość kątowa gamepada na osi Y
      
      
        gp_axis_angular_velocity_z*
        Prędkość kątowa gamepada na osi Z
      
      
        gp_axis_orientation_x*
        Orientacja X gamepada
      
      
        gp_axis_orientation_y*
        Orientacja Y gamepada
      
      
        gp_axis_orientation_z*
        Orientacja Z gamepada
      
      
        gp_axis_orientation_w*
        Orientacja W gamepada
      
    
  
  UWAGA Orientacja gamepada to kwaternion, dlatego ma on cztery wartości (X, Y, Z i W).
    
    * Te stałe są obsługiwane tylko na konsolach PS4 i PS5, a w przypadku użycia ich na innych platformach funkcje wejściowe zwrócą wartość 0, nawet jeśli używany jest gamepad DualSense.
  
  Aby lepiej zrozumieć, jaką dokładnie część kontrolera reprezentuje każda stała, można zapoznać się z poniższym obrazem standardowego gamepada XInput:
  
  Funkcje
  Poniżej znajduje się lista wszystkich funkcji gamepada:
  
    gamepad_is_supported
    gamepad_is_connected
    gamepad_get_guid
    gamepad_get_device_count
    gamepad_get_description
    gamepad_get_button_threshold
    gamepad_get_axis_deadzone
    gamepad_get_option
    gamepad_set_button_threshold
    gamepad_set_axis_deadzone
    gamepad_set_vibration
    gamepad_set_colour
    gamepad_set_option
    gamepad_axis_count
    gamepad_axis_value
    gamepad_button_check
    gamepad_button_check_pressed
    gamepad_button_check_released
    gamepad_button_count
    gamepad_button_value
    gamepad_hat_count
    gamepad_hat_value
  
   
  Istnieją również następujące funkcje gamepada, które służą do przemapowania wbudowanych stałych na bezpośrednie wejścia fizyczne danego gamepada. Te funkcje są przeznaczone tylko dla platform docelowych Windows Desktop, Ubuntu, macOS, i Android, a na Windows będą działać tylko dla urządzeń z wejściem bezpośrednim. Chociaż GameMaker Studio 2 zawiera mapowania dla wielu różnych gamepadów oparte na SDL Gamepad Controller DB, jednak ze względu na ogromną liczbę typów i marek kontrolerów nie jest możliwe mapowanie stałych GML na właściwe wejścia dla każdej marki i modelu, więc dzięki tym funkcjom masz możliwość tworzenia własnych mapowań.
  
    gamepad_get_mapping
    gamepad_test_mapping
    gamepad_remove_mapping
  
   
  Warto zauważyć, że kontrolery bezpośredniego wejścia działają w trybie współpracy, co oznacza, że gra ma do nich dostęp tylko wtedy, gdy jest aplikacją pierwszoplanową, co z kolei powoduje, że kontrolery bezpośredniego wejścia są "gubione", gdy gra traci ostrość, a następnie "odnajdywane", gdy ponownie odzyska ostrość (można to wykryć w zdarzeniu systemowym i zająć się tym). Podobnie, żadne dane wejściowe z gamepadów nie będą wykrywane, gdy gra nie jest w centrum uwagi, dlatego zalecamy używanie funkcji os_is_paused() lub window_has_focus() do wykrywania tego faktu i wstrzymywania gry lub czegoś podobnego, ponieważ każdy przycisk przytrzymany w momencie, gdy gra traci ostrość, zachowa stan przytrzymania do momentu, gdy gra odzyska ostrość.
  Zgodność
  Poniższa lista przedstawia aktualną kompatybilność między platformami (należy pamiętać, że będzie się ona zmieniać wraz z kolejnymi aktualizacjami):
  
    SystemWindows jest w pełni obsługiwany, przy czym jednocześnie można podłączyć maksymalnie 12 urządzeń (o numerach od 0 do 11, gdzie 0 - 3 to urządzenia XInput, a 4 - 11 to DirectInput). Dozwolone jest także ponowne mapowanie stałych kontrolera.
    SystemmacOS jest obsługiwany przez maksymalnie 4 podłączone urządzenia jednocześnie, przy czym urządzenia te mogą być TYLKO typu Playstation3 lub Xbox 360. Należy pamiętać, że aby obsługa padów działała, opcja "Build for Mac AppStore" w Mac Game Options musi być WYŁĄCZONA. Dozwolone jest także ponowne mapowanie stałych kontrolera.
    Ubuntu obsługuje również wejście Gamepada, ale może być konieczne zainstalowanie dodatkowych bibliotek z repozytorium Ubuntu. Można to zrobić w prosty sposób, otwierając terminal wiersza poleceń i wpisując poniższe polecenie (spowoduje to zainstalowanie obsługi GUI dla joysticka/gamepada, jak również samego API joysticka/gamepada - remapowanie stałych kontrolera jest niedozwolone ):
     sudo apt-get install jstest-gtk
        sudo apt-get install joystick.
    
    GryHTML5 wykorzystujące gamepady są obsługiwane przez większość głównych przeglądarek, z wyjątkiem Safari. Ponowne mapowanie stałych kontrolera jest niedozwolone.
    Przeglądarki internetowe wykrywają gamepady dopiero po naciśnięciu przycisku lub przesunięciu osi, więc mogą one nie być dostępne od razu po rozpoczęciu gry. Dotyczy to platform docelowych Opera GX i HTML .
    Obsługa gamepadów w systemie iOS obejmuje także szafkę iCade. Lewa oś odwzorowuje kontroler drążka (choć wejście jest cyfrowe, a nie analogowe), cztery przyciski "twarzowe" odwzorowują przyciski z przodu obudowy, a cztery przyciski na ramionach odwzorowują przyciski z tyłu obudowy.
    Eksport dosystemu Android (i Amazon Fire) obsługuje kontrolery NYKO i ogólne kontrolery Bluetooth, ale tylko wtedy, gdy są one włączone, co oznacza, że musisz zaznaczyć opcję iCade/Bluetooth w sekcji Ogólne w Opcjach gry na stronie Android. Do pełnego działania wymagają one API na poziomie 12. Należy zauważyć, że witryna GameMaker Studio 2 zarejestruje jako połączone wszystkie urządzenia Bluetooth, z którymi sparowane jest urządzenie użytkownika, niezależnie od tego, czy są one faktycznie połączone, czy nie. Dlatego należy wziąć to pod uwagę podczas przypisywania i sprawdzania "slotów". Należy pamiętać, że dozwolone jest także remapowanie stałych kontrolera.
    Na PS4, jeśli chcesz korzystać z funkcji śledzenia ruchu na panelu dotykowym, musisz użyć przycisków device_mouse_* przycisków. Ponowne mapowanie stałych kontrolera jest niedozwolone.
    W systemach Windows UWP, XBoxOne i Nintendo Switch gamepady są w pełni obsługiwane, ale nie jest dozwolone remapowanie stałych kontrolera.
  
  Najlepiej byłoby, gdyby na wszystkich platformach docelowych wyliczyć listę dostępnych "gniazd" dla gamepadów, a następnie sprawdzić, czy wykryto jakieś urządzenia, czyli coś takiego:
  var _maxpads = gamepad_get_device_count();
    
    for (var i = 0; i < _maxpads; i++)
    {
        if (gamepad_is_connected(i))
        {
            // do stuff with pad "i"
        }
    }
  
   
   
  
    
      
        Powrót: Wejście do gry
        Następny: Klawisze wirtualne i klawiatury wirtualne
      
    
    © Copyright YoYo Games Ltd. 2022 Wszystkie prawa zastrzeżone.
  
  
  

