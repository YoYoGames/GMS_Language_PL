
  
  physics_joint_distance_create
  Jednym z najprostszych połączeń jest połączenie odległościowe, które mówi, że odległość między dwoma punktami na dwóch instancjach musi być stała. Kiedy określasz złącze odległościowe, dwie instancje powinny być już utworzone i mieć przypisane zamocowanie, następnie definiujesz dwa punkty zakotwiczenia we współrzędnych room. Pierwszy punkt zakotwiczenia jest połączony z instancją 1, drugi punkt zakotwiczenia jest połączony z instancją 2, a odległość między tymi punktami oznacza długość wiązania odległościowego. Poniższy rysunek pokazuje, jak to działa:
  Jak widać, punkty zakotwiczenia są określone jako współrzędne room, więc należy zachować ostrożność przy ich definiowaniu, zwłaszcza jeśli instancje są tworzone w tym samym czasie co przeguby, a nie są umieszczane na stronie room poprzez edytor room. Należy również pamiętać, że przeguby są tworzone niezależnie od rozmiaru sprite instancji lub zamocowań, do których są dołączone. Jeśli więc utworzysz przegub odległościowy w innym miejscu niż początek instancji, będzie on nadal ważny i będzie ograniczał dwie instancje względem pozycji, w której został utworzony. Jeśli ustawisz wartość "col" na true, dwie instancje mogą oddziaływać na siebie i zderzać się ze sobą, ale tylko wtedy, gdy wystąpią zdarzenia kolizji, natomiast jeśli ustawisz tę wartość na false, nie będą się one zderzać bez względu na wszystko.
   
  Składnia:
  physics_joint_distance_create(inst1, inst2, w_anchor1_x, w_anchor1_y, w_anchor2_x, w_anchor2_y, col)
  
    
      
        Argument
        Typ
        Opis
      
      
        inst1
        Identyfikator instancji
        The first instance to connect with the joint
      
      
        inst2
        Identyfikator instancji
        The second instance to connect with the joint
      
      
        w_anchor1_x
        Real
        The first x coordinate for the joint, within the game world
      
      
        w_anchor1_y
        Real
        The first y coordinate for the joint, within the game world
      
      
        w_anchor2_x
        Real
        The second x coordinate for the joint, within the game world
      
      
        w_anchor2_y
        Real
        the second y coordinate for the joint, within the game world
      
      
        col
        Boolean
        Whether the two instances can collide (true) or not (false)
      
    
  
   
  Zwroty:
  Physics Joint ID
   
  Przykład:
  var mainFixture, o_id;
    mainFixture = physics_fixture_create();
    physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);
    o_id=instance_create_layer(x+300, y, "Instances", obj_Rudder);
    physics_fixture_bind(mainFixture, id);
    physics_fixture_bind(mainFixture, o_id);
    physics_joint_distance_create(id, o_id, x + 50, y, o_id.x - 50, o_id.y, 0);
    physics_fixture_delete(mainFixture);
  Powyższy kod tworzy i definiuje nowy uchwyt, a następnie tworzy instancję "obj_Rudder". Następnie uchwyt jest przypisywany do instancji, która wykonuje kod, jak również do nowo utworzonej instancji i tworzone jest połączenie między nimi. Na koniec uchwyt jest usuwany, ponieważ nie jest już potrzebny.
   
   
   
  
    
      
        Plecy: Stawy
        Następny: physics_joint_revolute_create
      
    
    © Copyright YoYo Games Ltd. 2022 Wszystkie prawa zastrzeżone.
  
  
  

