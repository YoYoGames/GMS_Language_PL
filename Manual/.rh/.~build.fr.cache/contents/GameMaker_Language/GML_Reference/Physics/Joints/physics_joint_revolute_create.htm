
  
  physics_joint_revolute_create
  Przegub obrotowy wymusza na dwóch ciałach wspólny punkt zakotwiczenia (często nazywany punktem przegubu), a przegub ma jeden stopień swobody - względny obrót dwóch ciał wokół tego punktu. Aby określić przegub obrotowy, należy podać dwie instancje oraz pojedynczy punkt zakotwiczenia w witrynie room, jak widać na zamieszczonym rysunku:
  Na rysunku widać, że dwie instancje zostały utworzone w taki sposób, aby zachodziły na siebie, a w miejscu, w którym się stykają, zdefiniowaliśmy przegub obrotowy. Teraz można ograniczyć swobodę obrotu tego przegubu za pomocą wartości "ang_min_limit" i "ang_max_limit". Jak to działa? Spójrzmy na inny obraz:
  Jak widać, kąty w świecie fizyki nie są takie same, jak standardowe kąty w GameMakerze, gdzie prawy to 0 stopni, a następnie w kierunku przeciwnym do ruchu wskazówek zegara, czyli góra to 90, lewy to 180, a dół to 270. Nie, w przypadku przegubu obrotowego oś 0 stopni biegnie od pozycji przegubu do początku drugiej instancji zdefiniowanej przez funkcję, a kąty są obliczane zgodnie z ruchem wskazówek zegara. Jeśli na stronie switch znajduje się ograniczenie kąta, ograniczenia są definiowane jako względne względem osi 0 stopni, a zakres ograniczeń powinien zawierać zero, w przeciwnym razie przegub będzie się kołysał, gdy zacznie się room. Na koniec można określić, czy przegub ma silnik, czy nie. Oznacza to, że w przypadku braku kolizji przegub będzie poruszał się w kierunku określonym przez prędkość silnika, gdzie liczba dodatnia oznacza ruch zgodny z ruchem wskazówek zegara, a liczba ujemna - ruch przeciwny do ruchu wskazówek zegara. Argument "max_motor_torque" służy do ograniczenia prędkości obrotów, aby uniknąć wiecznego przyspieszania silnika i ograniczyć wpływ kolizji na obroty. W ten sposób można użyć silnika przegubowego do symulowania tarcia w przegubie, ustawiając prędkość przegubu na zero, a maksymalny moment obrotowy na jakąś małą, ale znaczącą wartość. Silnik będzie starał się nie dopuścić do obracania się przegubu, ale ugnie się pod znacznym obciążeniem.
  Podobnie jak w przypadku wszystkich przegubów, jeśli ustawisz wartość "col" na true, dwie instancje będą mogły oddziaływać na siebie i zderzać się ze sobą, ale tylko wtedy, gdy wystąpią zdarzenia kolizji, natomiast jeśli ustawisz wartość " false, nie będą się zderzać bez względu na wszystko.
   
  Składnia:
  physics_joint_revolute_create(inst1, inst2, w_anchor_x, w_anchor_y, ang_min_limt, ang_max_limit, ang_limit, max_motor_torque, motor_speed, motor, col)
  
    
      
        Argument
        Typ
        Opis
      
      
        inst1
        Identyfikator instancji
        The first instance to connect with the joint
      
      
        inst2
        Identyfikator instancji
        The second instance to connect with the joint
      
      
        w_anchor_x
        Real
        The x coordinate for the joint, within the game world
      
      
        w_anchor_y
        Real
        The y coordinate for the joint, within the game world
      
      
        ang_min_limit
        Real
        The lower permitted limit for the joint angle
      
      
        ang_max_limit
        Real
        The upper permitted limit for the joint angle
      
      
        ang_limit
        Boolean
        Whether the to limit the angle of the joint (true) or not (false)
      
      
        max_motor_torque
        Real
        Sets the maximum motor torque used to achieve the desired motor speed (in Newtons per meter)
      
      
        motor_speed
        Real
        This is the speed at which the motor should rotate
      
      
        motor
        Boolean
        Whether the motor should be active (true) or not (false)
      
      
        col
        Boolean
        Whether the two instances can collide (true) or not (false)
      
    
  
   
  Zwroty:
  Physics Joint ID
   
  Przykład:
  var mainFixture, o_id;
    mainFixture = physics_fixture_create();
    physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);
    o_id=instance_create_layer(x+25, y, "Instances", obj_Door);
    physics_fixture_bind(mainFixture, id);
    physics_fixture_bind(mainFixture, o_id);
    physics_joint_revolute_create(id, o_id, x+25, y, -90, 90, 1, 0, 0, 0, 0);
    physics_fixture_delete(mainFixture);
  Powyższy kod tworzy i definiuje nowy uchwyt, a następnie tworzy instancję "obj_Door", wiążąc utworzony uchwyt z dwoma nowymi objects. Są one następnie połączone przegubem obrotowym bez silnika, a kąty ograniczone do +/- 90 stopni wychylenia. Na koniec usunięto uchwyt, ponieważ nie jest on już potrzebny.
   
   
   
  
    
      
        Plecy: Stawy
        Następny: physics_joint_prismatic_create
      
    
    © Copyright YoYo Games Ltd. 2022 Wszystkie prawa zastrzeżone.
  
  
  

