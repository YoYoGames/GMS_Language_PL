
  
  Cząstki stałe
  W przypadku skomplikowanych rzeczy w GameMakerze zwykle tworzy się obiekt i jego instancje na stronie object wokół room. Jednak w przypadku efektów graficznych może to być kosztowne, ponieważ każda instancja wiąże się z "kosztem" przetwarzania ze względu na zawarte w niej zmienne i kody w różnych zdarzeniach. Można obniżyć ten koszt, wykorzystując do rysowania grafiki warstwy z mapami kafelków oraz warstwy zasobów, ale są one zazwyczaj statyczne i nie można ich zbytnio zmieniać ani przemieszczać. Istnieje jednak jeszcze jedna możliwość rysowania szybkich, a zarazem uniwersalnych efektów graficznych w grach, a jest nią użycie cząsteczek.
  Cząstki to zasoby graficzne, które mają pewne właściwości zdefiniowane w systemie cząstek. Właściwościami tymi nie można manipulować bezpośrednio w przypadku poszczególnych cząstek, lecz są one zmieniane za pomocą kodu używanego do definiowania poszczególnych cząstek i systemu, do którego należą. Są one bardzo przydatne do tworzenia pięknych i krzykliwych efektów (lub subtelnych i dyskretnych!), takich jak eksplozje, kalkomanie, deszcz, śnieg, pola gwiazd i gruz w grze, bez narzutu na procesor, jaki powoduje używanie instancji.
  Podstawowa konfiguracja systemu cząsteczek składa się z trzech kroków, przy czym trzeci krok jest opcjonalny, w zależności od tego, jak chcesz tworzyć efekty cząsteczkowe w pomieszczeniu:
  
    Utwórz system cząsteczek: System cząsteczek jest jak pojemnik, w którym będziemy przechowywać różne typy cząsteczek gotowych do użycia. Używamy kodu, aby zdefiniować szereg aspektów wizualnych i zachowań naszych cząstek, a następnie umieszczamy je w "pojemniku", abyśmy mogli je wyjąć i użyć w dowolnym miejscu i czasie.
    Utwórz typy cząstek: Typy cząsteczek to sam efekt graficzny. Można mieć wiele różnych typów, każdy z własnym zakresem kolorów, alf, rozmiarów i ruchów, ale należy pamiętać, że nie ma się kontroli nad poszczególnymi cząstkami. Zdefiniujesz serię parametrów, a cząstka zostanie utworzona w taki sposób, aby miała losowo wybrane z nich zachowania.
    Tworzenie emiterów: Emitery to opcja, której można użyć do wybuchu lub strumienia cząstek z bardzo ściśle określonych granic. Są one opcjonalne, ponieważ cząstki można tworzyć z dowolnej instancji za pomocą metod part_particles_create() oraz part_particles_create_colour() ale nie zawsze są one odpowiednie w każdej sytuacji.
  
  Chociaż cząsteczki są doskonałym narzędziem do tworzenia efektów, wiążą się z nimi pewne ograniczenia i dobre praktyki, których należy przestrzegać, jeśli nie chcemy, aby gra miała niską wydajność lub nawet uległa awarii:
  
    Systemy cząsteczek, cząsteczki i emitery zajmują pamięć i dlatego należy bardzo uważać, jak się ich używa, ponieważ bardzo łatwo jest spowodować wyciek pamięci, który spowolni, a w końcu zawiesi grę. Jednym ze sposobów radzenia sobie z tym problemem jest posiadanie globalnego systemu, w którym wszystko jest zdefiniowane na początku gry i usuwane na jej końcu, ale jeśli chcesz mieć system dynamiczny, to każda cząstka i emiter (oraz sam system) powinny być niszczone w momencie, gdy nie są potrzebne.
    Cząstki są szybkie i mało obciążające dla procesora, ale nadal wymagają pewnego przetwarzania, dlatego nie powinno być ich 40 000 na ekranie naraz. Ogranicz je do tych, które są niezbędne do uzyskania określonego efektu, i nie więcej.
    Jeśli zdefiniujesz własne cząstki sprite zamiast używać jednej z 14 dołączonych do zestawu sprites, powinieneś starać się, aby były one jak najmniejsze, aby uzyskać pożądany efekt.
    Cząstki nie wchodzą w interakcję z niczym. Jeśli potrzebujesz, aby wchodziły w interakcję z użytkownikiem lub innymi obiektami w grze, powinieneś rozważyć użycie instancji, ponieważ cząsteczki są czysto graficzne.
    Mimo że nie ma technicznego ograniczenia liczby systemów, emiterów i cząsteczek, które można utworzyć w jednej grze, należy starać się ograniczyć ich liczbę do minimum, aby jak najmniej zużywać pamięci.
    Na urządzeniach przenośnych należy uważać z cząsteczkami, ponieważ ich rysowanie może być powolne, jeśli pokrywają duży obszar ekranu (nadmierne rysowanie na urządzeniach przenośnych jest jedną z głównych przyczyn spowolnienia).
    W HTML5 nie ma możliwości mieszania addytywnego, a jeśli nie jest włączona obsługa WebGL, nie ma też możliwości mieszania kolorów.
  
  Najprostszym sposobem tworzenia cząsteczek w grze za pomocą GameMakera jest użycie wbudowanego mechanizmu efektów. Efekty te są tworzone za pomocą wewnętrznego systemu cząsteczek, który jest w zasadzie bardzo szybką metodą rysowania efektów graficznych, dzięki czemu nie musisz się martwić o wszystkie szczegóły (takie jak zarządzanie pamięcią) podczas korzystania z tych funkcji. Po prostu określasz typ efektu, miejsce, w którym ma zostać utworzony, rozmiar, jaki ma mieć, i wreszcie jego kolor, a następnie pozwalasz, by GameMaker wykonał całą pracę.
  Do tworzenia wbudowanych efektów cząsteczkowych służą następujące funkcje:
  
    effect_create_below
    effect_create_above
    effect_clear
  
   
  Nawet jeśli te efekty mają ograniczony zakres i możliwości dostosowywania, można je wykorzystać do stworzenia prostych, wspaniałych efektów przy niewielkim wysiłku. Na przykład tworząc w każdym kroku mały kłąb szarego dymu pod poruszającym się pociskiem, można uzyskać całkiem przekonującą smugę dymu, więc nawet jeśli jesteś ekspertem w dziedzinie cząsteczek, warto pamiętać o istnieniu tych efektów, ponieważ mogą one zaoszczędzić trochę czasu.
  Jednak prawdziwy potencjał cząsteczek tkwi w projektowaniu i tworzeniu własnych efektów przy użyciu potężnych funkcji, które udostępnia witryna GameMaker Language. Więcej informacji można znaleźć w każdej z poniższych sekcji:
  
    Układy cząstek stałych
    Typy cząstek
    Emitery cząstek stałych
  
   
  Na następnej stronie znajduje się również sekcja zawierająca podstawowe wskazówki dotyczące projektowania i tworzenia cząsteczek do gier:
  
    Przewodnik po użyciu cząstek
  
   
   
   
  
    
      
        Powrót: Rysunek
        Następny: Tekstury
      
    
    © Copyright YoYo Games Ltd. 2022 Wszystkie prawa zastrzeżone.
  
  
  

